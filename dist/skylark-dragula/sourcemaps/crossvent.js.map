{"version":3,"sources":["crossvent.js"],"names":["define","eventer","add","on","remove","off"],"mappings":";;;;;;;AAAAA,QACI,wBACF,SAASC,GACP,OACIC,IAAMD,EAAQE,GACdC,OAASH,EAAQI","file":"../crossvent.js","sourcesContent":["define([\r\n    \"skylark-domx-eventer\"\r\n],function(eventer){\r\n    return {\r\n        add : eventer.on,\r\n        remove : eventer.off\r\n    }\r\n\r\n});\r\n\r\n/*\r\ndefine([\r\n\t\"./custom-event\",\r\n\t\"./eventmap\"\r\n],function(customEvent,eventmap){\r\n    'use strict';\r\n    var global = window;\r\n    \r\n    var doc = global.document;\r\n    var addEvent = addEventEasy;\r\n    var removeEvent = removeEventEasy;\r\n    var hardCache = [];\r\n\r\n    if (!global.addEventListener) {\r\n        addEvent = addEventHard;\r\n        removeEvent = removeEventHard;\r\n    }\r\n\r\n    function addEventEasy(el, type, fn, capturing) {\r\n        return el.addEventListener(type, fn, capturing);\r\n    }\r\n\r\n    function addEventHard(el, type, fn) {\r\n        return el.attachEvent('on' + type, wrap(el, type, fn));\r\n    }\r\n\r\n    function removeEventEasy(el, type, fn, capturing) {\r\n        return el.removeEventListener(type, fn, capturing);\r\n    }\r\n\r\n    function removeEventHard(el, type, fn) {\r\n        var listener = unwrap(el, type, fn);\r\n        if (listener) {\r\n            return el.detachEvent('on' + type, listener);\r\n        }\r\n    }\r\n\r\n    function fabricateEvent(el, type, model) {\r\n        var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\r\n        if (el.dispatchEvent) {\r\n            el.dispatchEvent(e);\r\n        } else {\r\n            el.fireEvent('on' + type, e);\r\n        }\r\n\r\n        function makeClassicEvent() {\r\n            var e;\r\n            if (doc.createEvent) {\r\n                e = doc.createEvent('Event');\r\n                e.initEvent(type, true, true);\r\n            } else if (doc.createEventObject) {\r\n                e = doc.createEventObject();\r\n            }\r\n            return e;\r\n        }\r\n\r\n        function makeCustomEvent() {\r\n            return new customEvent(type, {\r\n                detail: model\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapperFactory(el, type, fn) {\r\n        return function wrapper(originalEvent) {\r\n            var e = originalEvent || global.event;\r\n            e.target = e.target || e.srcElement;\r\n            e.preventDefault = e.preventDefault || function preventDefault() {\r\n                e.returnValue = false;\r\n            };\r\n            e.stopPropagation = e.stopPropagation || function stopPropagation() {\r\n                e.cancelBubble = true;\r\n            };\r\n            e.which = e.which || e.keyCode;\r\n            fn.call(el, e);\r\n        };\r\n    }\r\n\r\n    function wrap(el, type, fn) {\r\n        var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\r\n        hardCache.push({\r\n            wrapper: wrapper,\r\n            element: el,\r\n            type: type,\r\n            fn: fn\r\n        });\r\n        return wrapper;\r\n    }\r\n\r\n    function unwrap(el, type, fn) {\r\n        var i = find(el, type, fn);\r\n        if (i) {\r\n            var wrapper = hardCache[i].wrapper;\r\n            hardCache.splice(i, 1); // free up a tad of memory\r\n            return wrapper;\r\n        }\r\n    }\r\n\r\n    function find(el, type, fn) {\r\n        var i, item;\r\n        for (i = 0; i < hardCache.length; i++) {\r\n            item = hardCache[i];\r\n            if (item.element === el && item.type === type && item.fn === fn) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    return  {\r\n        add: addEvent,\r\n        remove: removeEvent,\r\n        fabricate: fabricateEvent\r\n    };\r\n\r\n});\r\n\r\n*/"]}