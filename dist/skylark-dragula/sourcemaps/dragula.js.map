{"version":3,"sources":["dragula.js"],"names":["define","skylark","mouse","touch","noder","finder","geom","eventer","styler","Drake","listen","attach","initialContainers","options","arguments","length","Array","isArray","o","moves","always","accepts","invalid","containers","isContainer","copy","copySortSource","revertOnSpill","removeOnSpill","direction","ignoreInputTextSelection","mirrorContainer","body","destroy","listener","events","release","drake","on","el","removeClass","dragging","addClass"],"mappings":";;;;;;;AAAAA,QACE,wBACA,+BACA,+BACA,qBACA,sBACA,oBACA,uBACA,sBACA,WACA,aACA,SACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGE,aAmEA,OAAOT,EAAQU,OAAO,eAhEtB,SAAkBC,EAAmBC,GAEvB,IADFC,UAAUC,SACkC,IAArCC,MAAMC,QAAQL,KAC7BC,EAAUD,EACVA,MAGF,IAAIM,EAAIL,WACQ,IAAZK,EAAEC,QAAoBD,EAAEC,MAAQC,QAClB,IAAdF,EAAEG,UAAsBH,EAAEG,QAAUD,QACtB,IAAdF,EAAEI,UAAsBJ,EAAEI,QAqC9B,WACE,OAAO,SArCY,IAAjBJ,EAAEK,aAAyBL,EAAEK,WAAaX,YACxB,IAAlBM,EAAEM,cAA0BN,EAAEM,YA4BlC,WACE,OAAO,SA5BM,IAAXN,EAAEO,OAAmBP,EAAEO,MAAO,QACT,IAArBP,EAAEQ,iBAA6BR,EAAEQ,gBAAiB,QAC9B,IAApBR,EAAES,gBAA4BT,EAAES,eAAgB,QAC5B,IAApBT,EAAEU,gBAA4BV,EAAEU,eAAgB,QAChC,IAAhBV,EAAEW,YAAwBX,EAAEW,UAAY,iBACT,IAA/BX,EAAEY,2BAAuCZ,EAAEY,0BAA2B,QAChD,IAAtBZ,EAAEa,kBAA8Bb,EAAEa,gBAAkB3B,EAAM4B,QAE9Dd,EAAEe,QAcF,WACEC,EAASC,QAAO,GAChBD,EAASE,aAfX,IAAIC,EAAQ,IAAI5B,EAAMS,IAEE,IAApBA,EAAEU,eACJS,EAAMC,GAAG,OA2BX,SAAoBC,GAClB/B,EAAOgC,YAAYD,EAAI,aA5BKD,GAAG,MA+BjC,SAAmBC,GACbF,EAAMI,UAAYjC,EAAOkC,SAASH,EAAI,aA7B5C,IAAIL,EAAWxB,EAAO2B,EAAMnB,GAG5B,OAFAgB,EAASC,SAEFE,EAYP,SAASjB,IACP,OAAO","file":"../dragula.js","sourcesContent":["define([\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\",\r\n  \"./_drake\",\r\n  \"./_listen\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler,\r\n  Drake,\r\n  listen\r\n){\r\n\r\n    'use strict';\r\n\r\n\r\n    function dragula (initialContainers, options) {\r\n      var len = arguments.length;\r\n      if (len === 1 && Array.isArray(initialContainers) === false) {\r\n        options = initialContainers;\r\n        initialContainers = [];\r\n      }\r\n\r\n      var o = options || {};\r\n      if (o.moves === void 0) { o.moves = always; }\r\n      if (o.accepts === void 0) { o.accepts = always; }\r\n      if (o.invalid === void 0) { o.invalid = invalidTarget; }\r\n      if (o.containers === void 0) { o.containers = initialContainers || []; }\r\n      if (o.isContainer === void 0) { o.isContainer = never; }\r\n      if (o.copy === void 0) { o.copy = false; }\r\n      if (o.copySortSource === void 0) { o.copySortSource = false; }\r\n      if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\r\n      if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\r\n      if (o.direction === void 0) { o.direction = 'vertical'; }\r\n      if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\r\n      if (o.mirrorContainer === void 0) { o.mirrorContainer = noder.body(); }\r\n\r\n      o.destroy = destroy;\r\n      var drake = new Drake(o);\r\n\r\n      if (o.removeOnSpill === true) {\r\n        drake.on('over', spillOver).on('out', spillOut);\r\n      }\r\n\r\n      var listener = listen(drake,o);\r\n      listener.events();\r\n\r\n      return drake;\r\n\r\n   \r\n\r\n      function destroy () {\r\n        listener.events(true);\r\n        listener.release({});\r\n      }\r\n\r\n      function never () { \r\n        return false; \r\n      }\r\n      function always () { \r\n        return true; \r\n      }\r\n\r\n      function invalidTarget () {\r\n        return false;\r\n      }\r\n\r\n\r\n      function spillOver (el) {\r\n        styler.removeClass(el, 'gu-hide');\r\n      }\r\n\r\n      function spillOut (el) {\r\n        if (drake.dragging) { styler.addClass(el, 'gu-hide'); }\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    return skylark.attach(\"intg.dragula\",dragula);\r\n\r\n});\r\n"]}