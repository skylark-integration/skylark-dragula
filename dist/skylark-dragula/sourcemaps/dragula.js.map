{"version":3,"sources":["dragula.js"],"names":["define","skylark","mouse","touch","noder","finder","geom","eventer","styler","emitter","doc","window","document","documentElement","touchy","el","op","type","fn","on","off","touchInited","mousy","whichMouseButton","e","touches","length","which","buttons","button","never","always","getRectWidth","rect","width","right","left","getRectHeight","height","bottom","top","getCoord","coord","host","targetTouches","changedTouches","getEventHost","missMap","pageX","pageY","attach","initialContainers","options","_mirror","_source","_item","_offsetX","_offsetY","_moveX","_moveY","_initialSibling","_currentSibling","_copy","_renderTimer","arguments","Array","isArray","_grabbed","_lastDropTarget","o","moves","accepts","invalid","containers","isContainer","copy","copySortSource","revertOnSpill","removeOnSpill","direction","ignoreInputTextSelection","mirrorContainer","body","drake","start","item","context","canStart","end","cancel","remove","destroy","events","release","canMove","dragging","removeClass","addClass","indexOf","grab","eventualMovements","startBecauseMouseMoved","movements","preventGrabbed","preventDefault","clientX","clientY","metaKey","ctrlKey","target","isInput","focus","elementBehindCursor","fromPoint","grabbed","offset","pagePosition","getBoundingClientRect","cloneNode","style","appendChild","drag","emit","renderMirrorImage","handle","parent","source","nextSibling","container","drop","ungrab","dropTarget","findDropTarget","removeChild","isInitialPlacement","cleanup","revert","reverts","initial","insertBefore","clearTimeout","s","sibling","accepted","immediate","getImmediateChild","reference","getReference","x","y","changed","moved","horizontal","boundingRect","resolve","i","len","children","outside","after"],"mappings":"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","file":"../dragula.js","sourcesContent":["define([\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\",\r\n  \"./emitter\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler,\r\n  emitter,\r\n){\r\n\r\n    'use strict';\r\n    var global = window;\r\n\r\n    var doc = global.document;\r\n    var documentElement = doc.documentElement;\r\n\r\n    function dragula (initialContainers, options) {\r\n      var len = arguments.length;\r\n      if (len === 1 && Array.isArray(initialContainers) === false) {\r\n        options = initialContainers;\r\n        initialContainers = [];\r\n      }\r\n      var _mirror; // mirror image\r\n      var _source; // source container\r\n      var _item; // item being dragged\r\n      var _offsetX; // reference x\r\n      var _offsetY; // reference y\r\n      var _moveX; // reference move x\r\n      var _moveY; // reference move y\r\n      var _initialSibling; // reference sibling when grabbed\r\n      var _currentSibling; // reference sibling now\r\n      var _copy; // item used for copying\r\n      var _renderTimer; // timer for setTimeout renderMirrorImage\r\n      var _lastDropTarget = null; // last container item was over\r\n      var _grabbed; // holds mousedown context until first mousemove\r\n\r\n      var o = options || {};\r\n      if (o.moves === void 0) { o.moves = always; }\r\n      if (o.accepts === void 0) { o.accepts = always; }\r\n      if (o.invalid === void 0) { o.invalid = invalidTarget; }\r\n      if (o.containers === void 0) { o.containers = initialContainers || []; }\r\n      if (o.isContainer === void 0) { o.isContainer = never; }\r\n      if (o.copy === void 0) { o.copy = false; }\r\n      if (o.copySortSource === void 0) { o.copySortSource = false; }\r\n      if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\r\n      if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\r\n      if (o.direction === void 0) { o.direction = 'vertical'; }\r\n      if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\r\n      if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\r\n\r\n      var drake = emitter({\r\n        containers: o.containers,\r\n        start: manualStart,\r\n        end: end,\r\n        cancel: cancel,\r\n        remove: remove,\r\n        destroy: destroy,\r\n        canMove: canMove,\r\n        dragging: false\r\n      });\r\n\r\n      if (o.removeOnSpill === true) {\r\n        drake.on('over', spillOver).on('out', spillOut);\r\n      }\r\n\r\n      events();\r\n\r\n      return drake;\r\n\r\n      function isContainer (el) {\r\n        return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\r\n      }\r\n\r\n      function events (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        touchy(documentElement, op, 'mousedown', grab);\r\n        touchy(documentElement, op, 'mouseup', release);\r\n      }\r\n\r\n      function eventualMovements (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\r\n      }\r\n\r\n      function movements (remove) {\r\n        var op = remove ? 'off' : 'on';\r\n        eventer[op](documentElement, 'selectstart', preventGrabbed); // IE8\r\n        eventer[op](documentElement, 'click', preventGrabbed);\r\n      }\r\n\r\n      function destroy () {\r\n        events(true);\r\n        release({});\r\n      }\r\n\r\n      function preventGrabbed (e) {\r\n        if (_grabbed) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n\r\n      function grab (e) {\r\n        _moveX = e.clientX;\r\n        _moveY = e.clientY;\r\n\r\n        var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\r\n        if (ignore) {\r\n          return; // we only care about honest-to-god left clicks and touch events\r\n        }\r\n        var item = e.target;\r\n        var context = canStart(item);\r\n        if (!context) {\r\n          return;\r\n        }\r\n        _grabbed = context;\r\n        eventualMovements();\r\n        if (e.type === 'mousedown') {\r\n          if (noder.isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\r\n            item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\r\n          } else {\r\n            e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\r\n          }\r\n        }\r\n      }\r\n\r\n      function startBecauseMouseMoved (e) {\r\n        if (!_grabbed) {\r\n          return;\r\n        }\r\n        if (whichMouseButton(e) === 0) {\r\n          release({});\r\n          return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\r\n        }\r\n        // truthy check fixes #239, equality fixes #207\r\n        if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\r\n          return;\r\n        }\r\n        if (o.ignoreInputTextSelection) {\r\n          var clientX = getCoord('clientX', e);\r\n          var clientY = getCoord('clientY', e);\r\n          //var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\r\n          var elementBehindCursor = noder.fromPoint(clientX,clientY);\r\n          if (noder.isInput(elementBehindCursor)) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        var grabbed = _grabbed; // call to end() unsets _grabbed\r\n        eventualMovements(true);\r\n        movements();\r\n        end();\r\n        start(grabbed);\r\n\r\n        var offset = geom.pagePosition(_item);\r\n        _offsetX = getCoord('pageX', e) - offset.left;\r\n        _offsetY = getCoord('pageY', e) - offset.top;\r\n\r\n        styler.addClass(_copy || _item, 'gu-transit');\r\n        renderMirrorImage();\r\n        drag(e);\r\n      }\r\n\r\n      function canStart (item) {\r\n        if (drake.dragging && _mirror) {\r\n          return;\r\n        }\r\n        if (isContainer(item)) {\r\n          return; // don't drag container itself\r\n        }\r\n        var handle = item;\r\n        while (finder.parent(item) && isContainer(finder.parent(item)) === false) {\r\n          if (o.invalid(item, handle)) {\r\n            return;\r\n          }\r\n          item = finder.parent(item); // drag target should be a top element\r\n          if (!item) {\r\n            return;\r\n          }\r\n        }\r\n        var source = finder.parent(item);\r\n        if (!source) {\r\n          return;\r\n        }\r\n        if (o.invalid(item, handle)) {\r\n          return;\r\n        }\r\n\r\n        var movable = o.moves(item, source, handle, finder.nextSibling(item));\r\n        if (!movable) {\r\n          return;\r\n        }\r\n\r\n        return {\r\n          item: item,\r\n          source: source\r\n        };\r\n      }\r\n\r\n      function canMove (item) {\r\n        return !!canStart(item);\r\n      }\r\n\r\n      function manualStart (item) {\r\n        var context = canStart(item);\r\n        if (context) {\r\n          start(context);\r\n        }\r\n      }\r\n\r\n      function start (context) {\r\n        if (isCopy(context.item, context.source)) {\r\n          _copy = context.item.cloneNode(true);\r\n          drake.emit('cloned', _copy, context.item, 'copy');\r\n        }\r\n\r\n        _source = context.source;\r\n        _item = context.item;\r\n        _initialSibling = _currentSibling = finder.nextSibling(context.item);\r\n\r\n        drake.dragging = true;\r\n        drake.emit('drag', _item, _source);\r\n      }\r\n\r\n      function invalidTarget () {\r\n        return false;\r\n      }\r\n\r\n      function end () {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        drop(item, finder.parent(item));\r\n      }\r\n\r\n      function ungrab () {\r\n        _grabbed = false;\r\n        eventualMovements(true);\r\n        movements(true);\r\n      }\r\n\r\n      function release (e) {\r\n        ungrab();\r\n\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        var clientX = getCoord('clientX', e);\r\n        var clientY = getCoord('clientY', e);\r\n        var elementBehindCursor = noder.fromPoint(clientX, clientY);\r\n        var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n        if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\r\n          drop(item, dropTarget);\r\n        } else if (o.removeOnSpill) {\r\n          remove();\r\n        } else {\r\n          cancel();\r\n        }\r\n      }\r\n\r\n      function drop (item, target) {\r\n        var parent = finder.parent(item);\r\n        if (_copy && o.copySortSource && target === _source) {\r\n          parent.removeChild(_item);\r\n        }\r\n        if (isInitialPlacement(target)) {\r\n          drake.emit('cancel', item, _source, _source);\r\n        } else {\r\n          drake.emit('drop', item, target, _source, _currentSibling);\r\n        }\r\n        cleanup();\r\n      }\r\n\r\n      function remove () {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        var parent = finder.parent(item);\r\n        if (parent) {\r\n          parent.removeChild(item);\r\n        }\r\n        drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\r\n        cleanup();\r\n      }\r\n\r\n      function cancel (revert) {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\r\n        var item = _copy || _item;\r\n        var parent = finder.parent(item);\r\n        var initial = isInitialPlacement(parent);\r\n        if (initial === false && reverts) {\r\n          if (_copy) {\r\n            if (parent) {\r\n              parent.removeChild(_copy);\r\n            }\r\n          } else {\r\n            _source.insertBefore(item, _initialSibling);\r\n          }\r\n        }\r\n        if (initial || reverts) {\r\n          drake.emit('cancel', item, _source, _source);\r\n        } else {\r\n          drake.emit('drop', item, parent, _source, _currentSibling);\r\n        }\r\n        cleanup();\r\n      }\r\n\r\n      function cleanup () {\r\n        var item = _copy || _item;\r\n        ungrab();\r\n        removeMirrorImage();\r\n        if (item) {\r\n          styler.removeClass(item, 'gu-transit');\r\n        }\r\n        if (_renderTimer) {\r\n          clearTimeout(_renderTimer);\r\n        }\r\n        drake.dragging = false;\r\n        if (_lastDropTarget) {\r\n          drake.emit('out', item, _lastDropTarget, _source);\r\n        }\r\n        drake.emit('dragend', item);\r\n        _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\r\n      }\r\n\r\n      function isInitialPlacement (target, s) {\r\n        var sibling;\r\n        if (s !== void 0) {\r\n          sibling = s;\r\n        } else if (_mirror) {\r\n          sibling = _currentSibling;\r\n        } else {\r\n          sibling = finder.nextSibling(_copy || _item);\r\n        }\r\n        return target === _source && sibling === _initialSibling;\r\n      }\r\n\r\n      function findDropTarget (elementBehindCursor, clientX, clientY) {\r\n        var target = elementBehindCursor;\r\n        while (target && !accepted()) {\r\n          target = finder.parent(target);\r\n        }\r\n        return target;\r\n\r\n        function accepted () {\r\n          var droppable = isContainer(target);\r\n          if (droppable === false) {\r\n            return false;\r\n          }\r\n\r\n          var immediate = getImmediateChild(target, elementBehindCursor);\r\n          var reference = getReference(target, immediate, clientX, clientY);\r\n          var initial = isInitialPlacement(target, reference);\r\n          if (initial) {\r\n            return true; // should always be able to drop it right back where it was\r\n          }\r\n          return o.accepts(_item, target, _source, reference);\r\n        }\r\n      }\r\n\r\n      function drag (e) {\r\n        if (!_mirror) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n\r\n        var clientX = getCoord('clientX', e);\r\n        var clientY = getCoord('clientY', e);\r\n        var x = clientX - _offsetX;\r\n        var y = clientY - _offsetY;\r\n\r\n        _mirror.style.left = x + 'px';\r\n        _mirror.style.top = y + 'px';\r\n\r\n        var item = _copy || _item;\r\n        var elementBehindCursor = noder.fromPoint( clientX, clientY);\r\n        var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n        var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\r\n        if (changed || dropTarget === null) {\r\n          out();\r\n          _lastDropTarget = dropTarget;\r\n          over();\r\n        }\r\n        var parent = finder.parent(item);\r\n        if (dropTarget === _source && _copy && !o.copySortSource) {\r\n          if (parent) {\r\n            parent.removeChild(item);\r\n          }\r\n          return;\r\n        }\r\n        var reference;\r\n        var immediate = getImmediateChild(dropTarget, elementBehindCursor);\r\n        if (immediate !== null) {\r\n          reference = getReference(dropTarget, immediate, clientX, clientY);\r\n        } else if (o.revertOnSpill === true && !_copy) {\r\n          reference = _initialSibling;\r\n          dropTarget = _source;\r\n        } else {\r\n          if (_copy && parent) {\r\n            parent.removeChild(item);\r\n          }\r\n          return;\r\n        }\r\n        if (\r\n          (reference === null && changed) ||\r\n          reference !== item &&\r\n          reference !== finder.nextSibling(item)\r\n        ) {\r\n          _currentSibling = reference;\r\n          dropTarget.insertBefore(item, reference);\r\n          drake.emit('shadow', item, dropTarget, _source);\r\n        }\r\n        function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\r\n        function over () { if (changed) { moved('over'); } }\r\n        function out () { if (_lastDropTarget) { moved('out'); } }\r\n      }\r\n\r\n      function spillOver (el) {\r\n        styler.removeClass(el, 'gu-hide');\r\n      }\r\n\r\n      function spillOut (el) {\r\n        if (drake.dragging) { styler.addClass(el, 'gu-hide'); }\r\n      }\r\n\r\n      function renderMirrorImage () {\r\n        if (_mirror) {\r\n          return;\r\n        }\r\n        var rect = _item.getBoundingClientRect();\r\n        _mirror = _item.cloneNode(true);\r\n        _mirror.style.width = getRectWidth(rect) + 'px';\r\n        _mirror.style.height = getRectHeight(rect) + 'px';\r\n        styler.removeClass(_mirror, 'gu-transit');\r\n        styler.addClass(_mirror, 'gu-mirror');\r\n        o.mirrorContainer.appendChild(_mirror);\r\n        touchy(documentElement, 'add', 'mousemove', drag);\r\n        styler.addClass(o.mirrorContainer, 'gu-unselectable');\r\n        drake.emit('cloned', _mirror, _item, 'mirror');\r\n      }\r\n\r\n      function removeMirrorImage () {\r\n        if (_mirror) {\r\n          styler.removeClass(o.mirrorContainer, 'gu-unselectable');\r\n          touchy(documentElement, 'remove', 'mousemove', drag);\r\n          finder.parent(_mirror).removeChild(_mirror);\r\n          _mirror = null;\r\n        }\r\n      }\r\n\r\n      function getImmediateChild (dropTarget, target) {\r\n        var immediate = target;\r\n        while (immediate !== dropTarget && finder.parent(immediate) !== dropTarget) {\r\n          immediate = finder.parent(immediate);\r\n        }\r\n        if (immediate === documentElement) {\r\n          return null;\r\n        }\r\n        return immediate;\r\n      }\r\n\r\n      function getReference (dropTarget, target, x, y) {\r\n        var horizontal = o.direction === 'horizontal';\r\n        var reference = target !== dropTarget ? inside() : outside();\r\n        return reference;\r\n\r\n        function outside () { // slower, but able to figure out any position\r\n          var len = dropTarget.children.length;\r\n          var i;\r\n          var el;\r\n          var rect;\r\n          for (i = 0; i < len; i++) {\r\n            el = dropTarget.children[i];\r\n            //rect = el.getBoundingClientRect();\r\n            rect = geom.boundingRect(el);\r\n            if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\r\n            if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\r\n          }\r\n          return null;\r\n        }\r\n\r\n        function inside () { // faster, but only available if dropped inside a child element\r\n          \r\n          //var rect = target.getBoundingClientRect();\r\n          var  rect = geom.boundingRect(target);\r\n          if (horizontal) {\r\n            return resolve(x > rect.left + getRectWidth(rect) / 2);\r\n          }\r\n          return resolve(y > rect.top + getRectHeight(rect) / 2);\r\n          \r\n        }\r\n\r\n        function resolve (after) {\r\n          return after ? finder.nextSibling(target) : target;\r\n        }\r\n      }\r\n\r\n      function isCopy (item, container) {\r\n        return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\r\n      }\r\n    }\r\n\r\n\r\n    \r\n    function touchy (el, op, type, fn) {\r\n      if (op == \"add\") {\r\n        eventer.on(el,type,fn);\r\n      } else {\r\n        eventer.off(el,type,fn);\r\n      }\r\n\r\n      if (!el.touchInited) {\r\n        el.touchInited = true;   \r\n        touch.mousy(el);     \r\n      }\r\n\r\n\r\n    }\r\n\r\n    function whichMouseButton (e) {\r\n    \r\n      if (e.touches !== void 0) { return e.touches.length; }\r\n      if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\r\n      if (e.buttons !== void 0) { return e.buttons; }\r\n      var button = e.button;\r\n      if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\r\n        return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    function never () { \r\n      return false; \r\n    }\r\n    function always () { \r\n      return true; \r\n    }\r\n    function getRectWidth (rect) { \r\n      return rect.width || (rect.right - rect.left); \r\n    }\r\n    function getRectHeight (rect) { \r\n      return rect.height || (rect.bottom - rect.top); \r\n    }\r\n\r\n\r\n    function getEventHost (e) {\r\n      // on touchend event, we have to use `e.changedTouches`\r\n      // see http://stackoverflow.com/questions/7192563/touchend-event-properties\r\n      // see https://github.com/bevacqua/dragula/issues/34\r\n      if (e.targetTouches && e.targetTouches.length) {\r\n        return e.targetTouches[0];\r\n      }\r\n      if (e.changedTouches && e.changedTouches.length) {\r\n        return e.changedTouches[0];\r\n      }\r\n      return e;\r\n    }\r\n\r\n    function getCoord (coord, e) {\r\n      var host = getEventHost(e);\r\n      var missMap = {\r\n        pageX: 'clientX', // IE8\r\n        pageY: 'clientY' // IE8\r\n      };\r\n      if (coord in missMap && !(coord in host) && missMap[coord] in host) {\r\n        coord = missMap[coord];\r\n      }\r\n      return host[coord];\r\n    }\r\n\r\n    return skylark.attach(\"intg.dragula\",dragula);\r\n\r\n});\r\n"]}