{"version":3,"sources":["skylark-dragula.js"],"names":["define","events","Emitter","skylark","mouse","touch","noder","finder","geom","eventer","styler","getEventHost","e","targetTouches","length","changedTouches","touchy","el","op","type","fn","on","off","touchInited","mousy","whichMouseButton","touches","which","buttons","button","getRectWidth","rect","width","right","left","getRectHeight","height","bottom","top","getCoord","coord","host","missMap","pageX","pageY","helpers","Drake","inherit","_source","_item","_initialSibling","_currentSibling","_renderTimer","_copy","_lastDropTarget","_prepareArgs","args","init","options","this","containers","destroy","isContainer","indexOf","isCopy","item","container","o","copy","findDropTarget","clientX","clientY","elementBehindCursor","fromPoint","target","self","accepted","parent","droppable","immediate","getImmediateChild","reference","getReference","initial","isInitialPlacement","accepts","s","sibling","nextSibling","dropTarget","x","y","horizontal","direction","boundingRect","resolve","inside","len","children","i","outside","after","root","canStart","dragging","ignoreInputTextSelection","isInput","handle","invalid","source","movable","moves","canMove","manualStart","context","start","cloneNode","emit","over","changed","moved","copySortSource","revertOnSpill","removeChild","insertBefore","end","drop","cleanup","remove","cancel","revert","reverts","arguments","removeClass","clearTimeout","documentElement","drake","_offsetX","_offsetY","_moveX","_moveY","_grabbed","_mirror","preventGrabbed","preventDefault","eventualMovements","startBecauseMouseMoved","movements","grab","ignore","metaKey","ctrlKey","focus","grabbed","offset","pagePosition","addClass","getBoundingClientRect","style","mirrorContainer","appendChild","drag","renderMirrorImage","release","ungrab","removeOnSpill","listen","attach","initialContainers","Array","isArray","always","body","listener","dragula","main"],"mappings":"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","file":"../skylark-dragula.js","sourcesContent":["define('skylark-langx-emitter/Emitter',[\r\n    \"skylark-langx-events\"\r\n],function(events){\r\n    return events.Emitter;\r\n});\ndefine('skylark-dragula/_helpers',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler\r\n ){\r\n    'use strict';\r\n\r\n    function touchy (el, op, type, fn) {\r\n      if (op == \"add\") {\r\n        eventer.on(el,type,fn);\r\n      } else {\r\n        eventer.off(el,type,fn);\r\n      }\r\n\r\n      if (!el.touchInited) {\r\n        el.touchInited = true;   \r\n        touch.mousy(el);     \r\n      }\r\n    }\r\n\r\n    function whichMouseButton (e) {\r\n    \r\n      if (e.touches !== void 0) { return e.touches.length; }\r\n      if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\r\n      if (e.buttons !== void 0) { return e.buttons; }\r\n      var button = e.button;\r\n      if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\r\n        return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\r\n      }\r\n\r\n    }\r\n\r\n\r\n    \r\n    function getRectWidth (rect) { \r\n      return rect.width || (rect.right - rect.left); \r\n    }\r\n    function getRectHeight (rect) { \r\n      return rect.height || (rect.bottom - rect.top); \r\n    }\r\n\r\n\r\n    function getEventHost (e) {\r\n      // on touchend event, we have to use `e.changedTouches`\r\n      // see http://stackoverflow.com/questions/7192563/touchend-event-properties\r\n      // see https://github.com/bevacqua/dragula/issues/34\r\n      if (e.targetTouches && e.targetTouches.length) {\r\n        return e.targetTouches[0];\r\n      }\r\n      if (e.changedTouches && e.changedTouches.length) {\r\n        return e.changedTouches[0];\r\n      }\r\n      return e;\r\n    }\r\n\r\n    function getCoord (coord, e) {\r\n      var host = getEventHost(e);\r\n      var missMap = {\r\n        pageX: 'clientX', // IE8\r\n        pageY: 'clientY' // IE8\r\n      };\r\n      if (coord in missMap && !(coord in host) && missMap[coord] in host) {\r\n        coord = missMap[coord];\r\n      }\r\n      return host[coord];\r\n    }\r\n\r\n    return {\r\n    \ttouchy,\r\n    \twhichMouseButton,\r\n    \tgetRectWidth,\r\n    \tgetRectHeight,\r\n    \tgetEventHost,\r\n    \tgetCoord\r\n    };\r\n});\ndefine('skylark-dragula/_drake',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx-emitter/Emitter\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\",\r\n  \"./_helpers\"\r\n],function(\r\n  skylark,\r\n  Emitter,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler,\r\n  helpers\r\n){\r\n    'use strict';\r\n\r\n\r\n    var Drake = Emitter.inherit({\r\n        _source : null,   // source container\r\n        _item : null,     // item being dragged\r\n        _initialSibling : null, // reference sibling when grabbed\r\n        _currentSibling : null, // reference sibling now\r\n        _renderTimer : null, // timer for setTimeout renderMirrorImage\r\n        _copy : null, // item used for copying\r\n        _lastDropTarget : null, // last container item was over\r\n\r\n        _prepareArgs : function(e,args) {\r\n            return args;\r\n        },\r\n        init : function(options) {\r\n            this.containers = options.containers;\r\n            this.destroy = options.destroy;\r\n            this.options = options;\r\n        },\r\n\r\n        isContainer : function(el) {\r\n            return this.containers.indexOf(el) !== -1 || this.options.isContainer(el);\r\n        },\r\n   \r\n        isCopy : function  (item, container) {\r\n            var o = this.options;\r\n            return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\r\n        },\r\n\r\n\r\n        findDropTarget : function  (clientX, clientY) {\r\n            var elementBehindCursor  = noder.fromPoint(clientX, clientY),\r\n                target = elementBehindCursor,\r\n                self = this;\r\n\r\n            while (target && !accepted()) {\r\n              target = finder.parent(target);\r\n            }\r\n\r\n            return target;\r\n\r\n            function accepted () {\r\n              var droppable = self.isContainer(target);\r\n              if (droppable === false) {\r\n                return false;\r\n              }\r\n\r\n              var immediate = self.getImmediateChild(target, elementBehindCursor);\r\n              var reference = self.getReference(target, immediate, clientX, clientY);\r\n              var initial = self.isInitialPlacement(target, reference);\r\n              if (initial) {\r\n                return true; // should always be able to drop it right back where it was\r\n              }\r\n              return self.options.accepts(self._item, target, self._source, reference);\r\n            }\r\n        },\r\n\r\n        isInitialPlacement : function  (target, s) {\r\n            var sibling;\r\n            if (s !== void 0) {\r\n              sibling = s;\r\n            ///} else if (_mirror) {\r\n            ///  sibling = _currentSibling;\r\n            } else {\r\n              sibling = finder.nextSibling(this._copy || this._item);\r\n            }\r\n            return target === this._source && sibling === this._initialSibling;\r\n        },\r\n\r\n        getReference : function(dropTarget, target, x, y) {\r\n            var o = this.options;\r\n\r\n            var horizontal = o.direction === 'horizontal';\r\n\r\n            if (target !== dropTarget) {\r\n                return inside();\r\n            }  else {\r\n                return  outside();\r\n            }\r\n\r\n            return reference;\r\n\r\n            function outside () { // slower, but able to figure out any position\r\n              var len = dropTarget.children.length;\r\n\r\n              for (let i = 0; i < len; i++) {\r\n                let el = dropTarget.children[i];\r\n                //rect = el.getBoundingClientRect();\r\n                let rect = geom.boundingRect(el);\r\n                if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\r\n                if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\r\n              }\r\n              return null;\r\n            }\r\n\r\n\r\n            function inside () { // faster, but only available if dropped inside a child element\r\n              \r\n              //var rect = target.getBoundingClientRect();\r\n              var  rect = geom.boundingRect(target);\r\n              if (horizontal) {\r\n                return resolve(x > rect.left + helpers.getRectWidth(rect) / 2);\r\n              }\r\n              return resolve(y > rect.top + helpers.getRectHeight(rect) / 2);\r\n              \r\n            }\r\n\r\n            function resolve (after) {\r\n              return after ? finder.nextSibling(target) : target;\r\n            }\r\n        },\r\n\r\n\r\n        getImmediateChild :   function(dropTarget, target) {\r\n            var immediate = target;\r\n            while (immediate !== dropTarget && finder.parent(immediate) !== dropTarget) {\r\n              immediate = finder.parent(immediate);\r\n            }\r\n            if (immediate === noder.root()) {\r\n              return null;\r\n            }\r\n            return immediate;\r\n        },\r\n\r\n        canStart : function (item) {\r\n            ///if (drake.dragging && _mirror) {\r\n            if (this.dragging) {\r\n              return;\r\n            }\r\n            if (this.isContainer(item)) {\r\n              return; // don't drag container itself\r\n            }\r\n\r\n            if (this.options.ignoreInputTextSelection) {\r\n                ///var clientX = getCoord('clientX', e);\r\n                ///var clientY = getCoord('clientY', e);\r\n                /////var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\r\n                ///var elementBehindCursor = noder.fromPoint(clientX,clientY);\r\n                ///if (noder.isInput(elementBehindCursor)) {\r\n                if (noder.isInput(item)){\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            var handle = item;\r\n            var o = this.options;\r\n            while (finder.parent(item) && this.isContainer(finder.parent(item)) === false) {\r\n              if (o.invalid(item, handle)) {\r\n                return;\r\n              }\r\n              item = finder.parent(item); // drag target should be a top element\r\n              if (!item) {\r\n                return;\r\n              }\r\n            }\r\n            var source = finder.parent(item);\r\n            if (!source) {\r\n              return;\r\n            }\r\n            if (o.invalid(item, handle)) {\r\n              return;\r\n            }\r\n\r\n            var movable = o.moves(item, source, handle, finder.nextSibling(item));\r\n            if (!movable) {\r\n              return;\r\n            }\r\n\r\n            return {\r\n              item: item,\r\n              source: source\r\n            };\r\n        },\r\n\r\n        canMove : function  (item) {\r\n            return !! this.canStart(item);\r\n        },\r\n\r\n        manualStart : function (item) {\r\n            var context = this.canStart(item);\r\n            if (context) {\r\n                this.start(context);\r\n            }\r\n        },\r\n\r\n        start : function(context) {\r\n            if (this.isCopy(context.item, context.source)) {\r\n              this._copy = context.item.cloneNode(true);\r\n              this.emit('cloned', this._copy, context.item, 'copy');\r\n            }\r\n\r\n            this._source = context.source;\r\n            this._item = context.item;\r\n            this._initialSibling = this._currentSibling = finder.nextSibling(context.item);\r\n\r\n            this.dragging = true;\r\n            this.emit('drag', this._item, this._source);\r\n        },\r\n\r\n        over : function(clientX,clientY) {\r\n            var o = this.options,\r\n                item = this._copy || this._item,\r\n                self = this;\r\n\r\n\r\n            var elementBehindCursor = noder.fromPoint( clientX, clientY);\r\n            var dropTarget = this.findDropTarget(clientX, clientY);\r\n            var changed = dropTarget !== null && dropTarget !== this._lastDropTarget;\r\n            if (changed || dropTarget === null) {\r\n              out();\r\n              this._lastDropTarget = dropTarget;\r\n              over();\r\n            }\r\n            var parent = finder.parent(item);\r\n            if (dropTarget === this._source && this._copy && !o.copySortSource) {\r\n              if (parent) {\r\n                parent.removeChild(item);\r\n              }\r\n              return;\r\n            }\r\n\r\n            var reference;\r\n            var immediate = this.getImmediateChild(dropTarget, elementBehindCursor);\r\n            if (immediate !== null) {\r\n              reference = this.getReference(dropTarget, immediate, clientX, clientY);\r\n            } else if (o.revertOnSpill === true && !this._copy) {\r\n              reference = this._initialSibling;\r\n              dropTarget = this._source;\r\n            } else {\r\n              if (this._copy && parent) {\r\n                parent.removeChild(item);\r\n              }\r\n              return;\r\n            }\r\n            if (\r\n              (reference === null && changed) ||\r\n              reference !== item &&\r\n              reference !== finder.nextSibling(item)\r\n            ) {\r\n              this._currentSibling = reference;\r\n              dropTarget.insertBefore(item, reference);\r\n              this.emit('shadow', item, dropTarget, this._source);\r\n            }\r\n\r\n            \r\n            function moved (type) { \r\n                self.emit(type, item, self._lastDropTarget, self._source); \r\n            }\r\n            \r\n            function over () { \r\n                if (changed) { \r\n                    moved('over'); \r\n                } \r\n            }\r\n            \r\n            function out () { \r\n                if (self._lastDropTarget) { \r\n                    moved('out'); \r\n                } \r\n            }\r\n        },\r\n\r\n        end : function() {\r\n            if (!this.dragging) {\r\n              return;\r\n            }\r\n            var item = this._copy || this._item;\r\n            this.drop(item, finder.parent(item));\r\n        },\r\n\r\n        drop : function(item, target) {\r\n            var parent = finder.parent(item);\r\n            if (this._copy && this.options.copySortSource && target === this._source) {\r\n              parent.removeChild(this._item);\r\n            }\r\n            if (this.isInitialPlacement(target)) {\r\n              this.emit('cancel', item, this._source, this._source);\r\n            } else {\r\n              this.emit('drop', item, target, this._source, this._currentSibling);\r\n            }\r\n            this.cleanup();\r\n        },\r\n\r\n        remove : function () {\r\n            if (!this.dragging) {\r\n              return;\r\n            }\r\n            var item = this._copy || this._item;\r\n            var parent = finder.parent(item);\r\n            if (parent) {\r\n              parent.removeChild(item);\r\n            }\r\n            this.emit(_copy ? 'cancel' : 'remove', item, parent, this._source);\r\n            this.cleanup();\r\n        },\r\n\r\n        cancel : function  (revert) {\r\n            if (!this.dragging) {\r\n              return;\r\n            }\r\n            var o = this.options;\r\n\r\n            var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\r\n            var item = this._copy || this._item;\r\n            var parent = finder.parent(item);\r\n            var initial = this.isInitialPlacement(parent);\r\n            if (initial === false && reverts) {\r\n              if (this._copy) {\r\n                if (parent) {\r\n                  parent.removeChild(this._copy);\r\n                }\r\n              } else {\r\n                this._source.insertBefore(item, this._initialSibling);\r\n              }\r\n            }\r\n            if (initial || reverts) {\r\n              this.emit('cancel', item, this._source, this._source);\r\n            } else {\r\n              this.emit('drop', item, parent, this._source, this._currentSibling);\r\n            }\r\n            this.cleanup();\r\n        },\r\n\r\n        cleanup : function  () {\r\n            var item = this._copy || this._item;\r\n            ///ungrab();\r\n            ///removeMirrorImage();\r\n            if (item) {\r\n              styler.removeClass(item, 'gu-transit');\r\n            }\r\n            if (this._renderTimer) {\r\n              clearTimeout(_renderTimer);\r\n            }\r\n            this.dragging = false;\r\n            if (this._lastDropTarget) {\r\n              this.emit('out', item, this._lastDropTarget, this._source);\r\n            }\r\n            this.emit('dragend', item);\r\n\r\n            this._source = \r\n            this._item = \r\n            this._copy = \r\n            this._initialSibling = \r\n            this._currentSibling = \r\n            this._renderTimer = \r\n            this._lastDropTarget = null;\r\n        }\r\n\r\n\r\n    });\r\n\r\n    \r\n    return Drake;\r\n});\ndefine('skylark-dragula/_listen',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\",\r\n  \"./_helpers\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler,\r\n  helpers\r\n ){\r\n    'use strict';\r\n\r\n    var documentElement = noder.root(); \t\r\n\r\n\r\n\tfunction listen(drake,options) {\r\n\r\n\t\tvar _offsetX; // reference x\r\n\t    var _offsetY; // reference y\r\n\t    var _moveX; // reference move x\r\n\t    var _moveY; // reference move y\r\n\t\t\r\n\t    var _grabbed; // holds mousedown context until first mousemove\r\n\r\n\r\n\t\tvar _mirror; // mirror image\r\n\r\n\t\tfunction renderMirrorImage () {\r\n\t\t\tif (_mirror) {\r\n\t\t\t  return;\r\n\t\t\t}\r\n\t\t\tvar rect = drake._item.getBoundingClientRect();\r\n\t\t\t_mirror = drake._item.cloneNode(true);\r\n\t\t\t_mirror.style.width = helpers.getRectWidth(rect) + 'px';\r\n\t\t\t_mirror.style.height = helpers.getRectHeight(rect) + 'px';\r\n\t\t\tstyler.removeClass(_mirror, 'gu-transit');\r\n\t\t\tstyler.addClass(_mirror, 'gu-mirror');\r\n\t\t\toptions.mirrorContainer.appendChild(_mirror);\r\n\t\t\thelpers.touchy(documentElement, 'add', 'mousemove', drag);\r\n\t\t\tstyler.addClass(options.mirrorContainer, 'gu-unselectable');\r\n\t\t\tdrake.emit('cloned', _mirror, drake._item, 'mirror');\r\n\t\t}\r\n\r\n\t\tfunction removeMirrorImage () {\r\n\t\t\tif (_mirror) {\r\n\t\t\t  styler.removeClass(options.mirrorContainer, 'gu-unselectable');\r\n\t\t\t  helpers.touchy(documentElement, 'remove', 'mousemove', drag);\r\n\t\t\t  finder.parent(_mirror).removeChild(_mirror);\r\n\t\t\t  _mirror = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction moveMirrorImage(x,y) {\r\n\t\t\t_mirror.style.left = x + 'px';\r\n\t\t\t_mirror.style.top = y + 'px';\r\n\t\t}\r\n\r\n\t\tfunction isMirrorRendered() {\r\n\t\t  \treturn !!_mirror;\r\n\t\t}\r\n\r\n\t\tfunction preventGrabbed (e) {\r\n\t\t\tif (_grabbed) {\r\n\t\t\t  e.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction events (remove) {\r\n\t\t\tvar op = remove ? 'remove' : 'add';\r\n\t\t\thelpers.touchy(documentElement, op, 'mousedown', grab);\r\n\t\t\thelpers.touchy(documentElement, op, 'mouseup', release);\r\n\t\t}\r\n\r\n\t\tfunction eventualMovements (remove) {\r\n\t\t\tvar op = remove ? 'remove' : 'add';\r\n\t\t\thelpers.touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\r\n\t\t}\r\n\r\n\r\n\t\tfunction movements (remove) {\r\n\t\t\tvar op = remove ? 'off' : 'on';\r\n\t\t\teventer[op](documentElement, 'selectstart', preventGrabbed); // IE8\r\n\t\t\teventer[op](documentElement, 'click', preventGrabbed);\r\n\t\t} \r\n\r\n\t\tfunction grab (e) {\r\n\t\t\t_moveX = e.clientX;\r\n\t\t\t_moveY = e.clientY;\r\n\r\n\t\t\tvar ignore = helpers.whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\r\n\t\t\tif (ignore) {\r\n\t\t\t  return; // we only care about honest-to-god left clicks and touch events\r\n\t\t\t}\r\n\t\t\tvar item = e.target;\r\n\t\t\tvar context = drake.canStart(item);\r\n\t\t\tif (!context) {\r\n\t\t  \t\treturn;\r\n\t\t\t}\r\n\t\t\t_grabbed = context;\r\n\t\t\teventualMovements();\r\n\t\t\tif (e.type === 'mousedown') {\r\n\t\t  \t\tif (noder.isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\r\n\t\t    \t\titem.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\r\n\t\t  \t\t} else {\r\n\t\t    \t\te.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\r\n\t\t  \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction startBecauseMouseMoved (e) {\r\n\t\t\tif (!_grabbed) {\r\n\t\t  \t\treturn;\r\n\t\t\t}\r\n\t\t\tif (helpers.whichMouseButton(e) === 0) {\r\n\t\t  \t\trelease({});\r\n\t\t  \t\treturn; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\r\n\t\t\t}\r\n\t\t\t// truthy check fixes #239, equality fixes #207\r\n\t\t\tif (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar grabbed = _grabbed; // call to end() unsets _grabbed\r\n\t\t\teventualMovements(true);\r\n\t\t\tmovements();\r\n\t\t\tdrake.end();\r\n\t\t\tdrake.start(grabbed);\r\n\r\n\t\t\tvar offset = geom.pagePosition(drake._item);\r\n\t\t\t_offsetX = helpers.getCoord('pageX', e) - offset.left;\r\n\t\t\t_offsetY = helpers.getCoord('pageY', e) - offset.top;\r\n\r\n\t\t\tstyler.addClass(drake._copy || drake._item, 'gu-transit');\r\n\t\t\trenderMirrorImage();\r\n\t\t\tdrag(e);\r\n\t\t}\r\n\r\n\t\tfunction ungrab () {\r\n\t\t\t_grabbed = false;\r\n\t\t\teventualMovements(true);\r\n\t\t\tmovements(true);\r\n\t\t}\r\n\r\n\t\tfunction release (e) {\r\n\t\t\tungrab();\r\n            removeMirrorImage();\r\n\t\t\tif (!drake.dragging) {\r\n\t\t\t  return;\r\n\t\t\t}\r\n\t\t\tvar item = drake._copy || drake._item;\r\n\t\t\tvar clientX = helpers.getCoord('clientX', e);\r\n\t\t\tvar clientY = helpers.getCoord('clientY', e);\r\n\t\t\tvar dropTarget = drake.findDropTarget(clientX, clientY);\r\n\t\t\tif (dropTarget && ((drake._copy &&  options.copySortSource) || (!drake._copy || dropTarget !== drake._source))) {\r\n\t\t\t  drake.drop(item, dropTarget);\r\n\t\t\t} else if (options.removeOnSpill) {\r\n\t\t\t  drake.remove();\r\n\t\t\t} else {\r\n\t\t\t  drake.cancel();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction drag (e) {\r\n\t\t\tif (!isMirrorRendered()) {\r\n\t\t\t  return;\r\n\t\t\t}\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tvar clientX = helpers.getCoord('clientX', e);\r\n\t\t\tvar clientY = helpers.getCoord('clientY', e);\r\n\r\n\r\n\t\t\tmoveMirrorImage(clientX - _offsetX,clientY - _offsetY);\r\n\r\n\t\t\tdrake.over(clientX,clientY);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tevents,\r\n\t\t\tgrab,\r\n\t\t\tungrab,\r\n\t\t\trelease\r\n\t\t}\r\n\t}\r\n\r\n\treturn listen;\r\n});\ndefine('skylark-dragula/dragula',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\",\r\n  \"./_drake\",\r\n  \"./_listen\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler,\r\n  Drake,\r\n  listen\r\n){\r\n\r\n    'use strict';\r\n\r\n\r\n    function dragula (initialContainers, options) {\r\n      var len = arguments.length;\r\n      if (len === 1 && Array.isArray(initialContainers) === false) {\r\n        options = initialContainers;\r\n        initialContainers = [];\r\n      }\r\n\r\n      var o = options || {};\r\n      if (o.moves === void 0) { o.moves = always; }\r\n      if (o.accepts === void 0) { o.accepts = always; }\r\n      if (o.invalid === void 0) { o.invalid = invalidTarget; }\r\n      if (o.containers === void 0) { o.containers = initialContainers || []; }\r\n      if (o.isContainer === void 0) { o.isContainer = never; }\r\n      if (o.copy === void 0) { o.copy = false; }\r\n      if (o.copySortSource === void 0) { o.copySortSource = false; }\r\n      if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\r\n      if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\r\n      if (o.direction === void 0) { o.direction = 'vertical'; }\r\n      if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\r\n      if (o.mirrorContainer === void 0) { o.mirrorContainer = noder.body(); }\r\n\r\n      o.destroy = destroy;\r\n      var drake = new Drake(o);\r\n\r\n      if (o.removeOnSpill === true) {\r\n        drake.on('over', spillOver).on('out', spillOut);\r\n      }\r\n\r\n      var listener = listen(drake,o);\r\n      listener.events();\r\n\r\n      return drake;\r\n\r\n   \r\n\r\n      function destroy () {\r\n        listener.events(true);\r\n        listener.release({});\r\n      }\r\n\r\n      function never () { \r\n        return false; \r\n      }\r\n      function always () { \r\n        return true; \r\n      }\r\n\r\n      function invalidTarget () {\r\n        return false;\r\n      }\r\n\r\n\r\n      function spillOver (el) {\r\n        styler.removeClass(el, 'gu-hide');\r\n      }\r\n\r\n      function spillOut (el) {\r\n        if (drake.dragging) { styler.addClass(el, 'gu-hide'); }\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    return skylark.attach(\"intg.dragula\",dragula);\r\n\r\n});\r\n\ndefine('skylark-dragula/main',[\r\n\t\"./dragula\"\r\n],function(dragula){\r\n\treturn dragula;\r\n});\ndefine('skylark-dragula', ['skylark-dragula/main'], function (main) { return main; });\n\n"]}