{"version":3,"sources":["skylark-dragula.js"],"names":["define","events","Emitter","Emitter2","inherit","_prepareArgs","e","args","init","thing","options","undefined","Object","assign","this","skylark","mouse","touch","noder","finder","geom","eventer","styler","emitter","global","window","doc","document","documentElement","touchy","el","op","type","fn","on","off","touchInited","mousy","whichMouseButton","touches","length","which","buttons","button","getElementBehindPoint","point","x","y","elementFromPoint","never","always","getRectWidth","rect","width","right","left","getRectHeight","height","bottom","top","getParent","parent","isInput","nextEl","nextSibling","getCoord","coord","host","targetTouches","changedTouches","getEventHost","missMap","pageX","pageY","attach","initialContainers","_mirror","_source","_item","_offsetX","_offsetY","_moveX","_moveY","_initialSibling","_currentSibling","_copy","_renderTimer","arguments","Array","isArray","_grabbed","_lastDropTarget","o","moves","accepts","invalid","containers","isContainer","copy","copySortSource","revertOnSpill","removeOnSpill","direction","ignoreInputTextSelection","mirrorContainer","body","drake","start","item","context","canStart","end","cancel","remove","destroy","release","canMove","dragging","removeClass","addClass","indexOf","grab","eventualMovements","startBecauseMouseMoved","movements","preventGrabbed","preventDefault","clientX","clientY","ignore","metaKey","ctrlKey","target","focus","elementBehindCursor","fromPoint","grabbed","offset","pagePosition","getBoundingClientRect","cloneNode","style","appendChild","drag","emit","renderMirrorImage","handle","source","movable","container","drop","ungrab","dropTarget","findDropTarget","removeChild","isInitialPlacement","cleanup","revert","reverts","initial","insertBefore","clearTimeout","s","sibling","accepted","droppable","immediate","getImmediateChild","reference","getReference","changed","moved","horizontal","boundingRect","resolve","inside","i","len","children","outside","after","dragula","main"],"mappings":"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","file":"../skylark-dragula.js","sourcesContent":["define('skylark-langx-emitter/Emitter',[\r\n    \"skylark-langx-events\"\r\n],function(events){\r\n    return events.Emitter;\r\n});\ndefine('skylark-dragula/emitter',[\r\n    \"skylark-langx-emitter/Emitter\"\r\n],function(Emitter){\r\n\r\n    var Emitter2 = Emitter.inherit({\r\n        _prepareArgs : function(e,args) {\r\n            return args;\r\n        },\r\n        init : function(thing, options) {\r\n            var opts = options || {};\r\n            if (thing === undefined) {\r\n                thing = {};\r\n            }\r\n\r\n            Object.assign(this,thing);\r\n        }\r\n    });\r\n\r\n    return Emitter2;\r\n});\r\n\r\n/*\r\ndefine([\r\n\t\"./atoa\",\r\n\t\"./debounce\"\r\n],function(atoa,debounce){\r\n    'use strict';\r\n\r\n\tfunction emitter(thing, options) {\r\n        var opts = options || {};\r\n        var evt = {};\r\n        if (thing === undefined) {\r\n            thing = {};\r\n        }\r\n        thing.on = function(type, fn) {\r\n            if (!evt[type]) {\r\n                evt[type] = [fn];\r\n            } else {\r\n                evt[type].push(fn);\r\n            }\r\n            return thing;\r\n        };\r\n        thing.once = function(type, fn) {\r\n            fn._once = true; // thing.off(fn) still works!\r\n            thing.on(type, fn);\r\n            return thing;\r\n        };\r\n        thing.off = function(type, fn) {\r\n            var c = arguments.length;\r\n            if (c === 1) {\r\n                delete evt[type];\r\n            } else if (c === 0) {\r\n                evt = {};\r\n            } else {\r\n                var et = evt[type];\r\n                if (!et) {\r\n                    return thing;\r\n                }\r\n                et.splice(et.indexOf(fn), 1);\r\n            }\r\n            return thing;\r\n        };\r\n        thing.emit = function() {\r\n            var args = atoa(arguments);\r\n            return thing.emitterSnapshot(args.shift()).apply(this, args);\r\n        };\r\n        thing.emitterSnapshot = function(type) {\r\n            var et = (evt[type] || []).slice(0);\r\n            return function() {\r\n                var args = atoa(arguments);\r\n                var ctx = this || thing;\r\n                if (type === 'error' && opts.throws !== false && !et.length) {\r\n                    throw args.length === 1 ? args[0] : args;\r\n                }\r\n                et.forEach(function emitter(listen) {\r\n                    if (opts.async) {\r\n                        debounce(listen, args, ctx);\r\n                    } else {\r\n                        listen.apply(ctx, args);\r\n                    }\r\n                    if (listen._once) {\r\n                        thing.off(type, listen);\r\n                    }\r\n                });\r\n                return thing;\r\n            };\r\n        };\r\n        return thing;\r\n    }\r\n\r\n    return emitter;\r\n});\r\n\r\n*/;\ndefine('skylark-dragula/dragula',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-styler\",\r\n  \"./emitter\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  styler,\r\n  emitter,\r\n){\r\n\r\n    'use strict';\r\n    var global = window;\r\n\r\n    var doc = global.document;\r\n    var documentElement = doc.documentElement;\r\n\r\n    function dragula (initialContainers, options) {\r\n      var len = arguments.length;\r\n      if (len === 1 && Array.isArray(initialContainers) === false) {\r\n        options = initialContainers;\r\n        initialContainers = [];\r\n      }\r\n      var _mirror; // mirror image\r\n      var _source; // source container\r\n      var _item; // item being dragged\r\n      var _offsetX; // reference x\r\n      var _offsetY; // reference y\r\n      var _moveX; // reference move x\r\n      var _moveY; // reference move y\r\n      var _initialSibling; // reference sibling when grabbed\r\n      var _currentSibling; // reference sibling now\r\n      var _copy; // item used for copying\r\n      var _renderTimer; // timer for setTimeout renderMirrorImage\r\n      var _lastDropTarget = null; // last container item was over\r\n      var _grabbed; // holds mousedown context until first mousemove\r\n\r\n      var o = options || {};\r\n      if (o.moves === void 0) { o.moves = always; }\r\n      if (o.accepts === void 0) { o.accepts = always; }\r\n      if (o.invalid === void 0) { o.invalid = invalidTarget; }\r\n      if (o.containers === void 0) { o.containers = initialContainers || []; }\r\n      if (o.isContainer === void 0) { o.isContainer = never; }\r\n      if (o.copy === void 0) { o.copy = false; }\r\n      if (o.copySortSource === void 0) { o.copySortSource = false; }\r\n      if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\r\n      if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\r\n      if (o.direction === void 0) { o.direction = 'vertical'; }\r\n      if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\r\n      if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\r\n\r\n      var drake = emitter({\r\n        containers: o.containers,\r\n        start: manualStart,\r\n        end: end,\r\n        cancel: cancel,\r\n        remove: remove,\r\n        destroy: destroy,\r\n        canMove: canMove,\r\n        dragging: false\r\n      });\r\n\r\n      if (o.removeOnSpill === true) {\r\n        drake.on('over', spillOver).on('out', spillOut);\r\n      }\r\n\r\n      events();\r\n\r\n      return drake;\r\n\r\n      function isContainer (el) {\r\n        return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\r\n      }\r\n\r\n      function events (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        touchy(documentElement, op, 'mousedown', grab);\r\n        touchy(documentElement, op, 'mouseup', release);\r\n      }\r\n\r\n      function eventualMovements (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\r\n      }\r\n\r\n      function movements (remove) {\r\n        var op = remove ? 'off' : 'on';\r\n        eventer[op](documentElement, 'selectstart', preventGrabbed); // IE8\r\n        eventer[op](documentElement, 'click', preventGrabbed);\r\n      }\r\n\r\n      function destroy () {\r\n        events(true);\r\n        release({});\r\n      }\r\n\r\n      function preventGrabbed (e) {\r\n        if (_grabbed) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n\r\n      function grab (e) {\r\n        _moveX = e.clientX;\r\n        _moveY = e.clientY;\r\n\r\n        var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\r\n        if (ignore) {\r\n          return; // we only care about honest-to-god left clicks and touch events\r\n        }\r\n        var item = e.target;\r\n        var context = canStart(item);\r\n        if (!context) {\r\n          return;\r\n        }\r\n        _grabbed = context;\r\n        eventualMovements();\r\n        if (e.type === 'mousedown') {\r\n          if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\r\n            item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\r\n          } else {\r\n            e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\r\n          }\r\n        }\r\n      }\r\n\r\n      function startBecauseMouseMoved (e) {\r\n        if (!_grabbed) {\r\n          return;\r\n        }\r\n        if (whichMouseButton(e) === 0) {\r\n          release({});\r\n          return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\r\n        }\r\n        // truthy check fixes #239, equality fixes #207\r\n        if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\r\n          return;\r\n        }\r\n        if (o.ignoreInputTextSelection) {\r\n          var clientX = getCoord('clientX', e);\r\n          var clientY = getCoord('clientY', e);\r\n          //var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\r\n          var elementBehindCursor = noder.fromPoint(clientX,clientY);\r\n          if (isInput(elementBehindCursor)) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        var grabbed = _grabbed; // call to end() unsets _grabbed\r\n        eventualMovements(true);\r\n        movements();\r\n        end();\r\n        start(grabbed);\r\n\r\n        var offset = getOffset(_item);\r\n        _offsetX = getCoord('pageX', e) - offset.left;\r\n        _offsetY = getCoord('pageY', e) - offset.top;\r\n\r\n        styler.addClass(_copy || _item, 'gu-transit');\r\n        renderMirrorImage();\r\n        drag(e);\r\n      }\r\n\r\n      function canStart (item) {\r\n        if (drake.dragging && _mirror) {\r\n          return;\r\n        }\r\n        if (isContainer(item)) {\r\n          return; // don't drag container itself\r\n        }\r\n        var handle = item;\r\n        while (getParent(item) && isContainer(getParent(item)) === false) {\r\n          if (o.invalid(item, handle)) {\r\n            return;\r\n          }\r\n          item = getParent(item); // drag target should be a top element\r\n          if (!item) {\r\n            return;\r\n          }\r\n        }\r\n        var source = getParent(item);\r\n        if (!source) {\r\n          return;\r\n        }\r\n        if (o.invalid(item, handle)) {\r\n          return;\r\n        }\r\n\r\n        var movable = o.moves(item, source, handle, nextEl(item));\r\n        if (!movable) {\r\n          return;\r\n        }\r\n\r\n        return {\r\n          item: item,\r\n          source: source\r\n        };\r\n      }\r\n\r\n      function canMove (item) {\r\n        return !!canStart(item);\r\n      }\r\n\r\n      function manualStart (item) {\r\n        var context = canStart(item);\r\n        if (context) {\r\n          start(context);\r\n        }\r\n      }\r\n\r\n      function start (context) {\r\n        if (isCopy(context.item, context.source)) {\r\n          _copy = context.item.cloneNode(true);\r\n          drake.emit('cloned', _copy, context.item, 'copy');\r\n        }\r\n\r\n        _source = context.source;\r\n        _item = context.item;\r\n        _initialSibling = _currentSibling = nextEl(context.item);\r\n\r\n        drake.dragging = true;\r\n        drake.emit('drag', _item, _source);\r\n      }\r\n\r\n      function invalidTarget () {\r\n        return false;\r\n      }\r\n\r\n      function end () {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        drop(item, getParent(item));\r\n      }\r\n\r\n      function ungrab () {\r\n        _grabbed = false;\r\n        eventualMovements(true);\r\n        movements(true);\r\n      }\r\n\r\n      function release (e) {\r\n        ungrab();\r\n\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        var clientX = getCoord('clientX', e);\r\n        var clientY = getCoord('clientY', e);\r\n        var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\r\n        var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n        if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\r\n          drop(item, dropTarget);\r\n        } else if (o.removeOnSpill) {\r\n          remove();\r\n        } else {\r\n          cancel();\r\n        }\r\n      }\r\n\r\n      function drop (item, target) {\r\n        var parent = getParent(item);\r\n        if (_copy && o.copySortSource && target === _source) {\r\n          parent.removeChild(_item);\r\n        }\r\n        if (isInitialPlacement(target)) {\r\n          drake.emit('cancel', item, _source, _source);\r\n        } else {\r\n          drake.emit('drop', item, target, _source, _currentSibling);\r\n        }\r\n        cleanup();\r\n      }\r\n\r\n      function remove () {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        var parent = getParent(item);\r\n        if (parent) {\r\n          parent.removeChild(item);\r\n        }\r\n        drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\r\n        cleanup();\r\n      }\r\n\r\n      function cancel (revert) {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\r\n        var item = _copy || _item;\r\n        var parent = getParent(item);\r\n        var initial = isInitialPlacement(parent);\r\n        if (initial === false && reverts) {\r\n          if (_copy) {\r\n            if (parent) {\r\n              parent.removeChild(_copy);\r\n            }\r\n          } else {\r\n            _source.insertBefore(item, _initialSibling);\r\n          }\r\n        }\r\n        if (initial || reverts) {\r\n          drake.emit('cancel', item, _source, _source);\r\n        } else {\r\n          drake.emit('drop', item, parent, _source, _currentSibling);\r\n        }\r\n        cleanup();\r\n      }\r\n\r\n      function cleanup () {\r\n        var item = _copy || _item;\r\n        ungrab();\r\n        removeMirrorImage();\r\n        if (item) {\r\n          styler.removeClass(item, 'gu-transit');\r\n        }\r\n        if (_renderTimer) {\r\n          clearTimeout(_renderTimer);\r\n        }\r\n        drake.dragging = false;\r\n        if (_lastDropTarget) {\r\n          drake.emit('out', item, _lastDropTarget, _source);\r\n        }\r\n        drake.emit('dragend', item);\r\n        _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\r\n      }\r\n\r\n      function isInitialPlacement (target, s) {\r\n        var sibling;\r\n        if (s !== void 0) {\r\n          sibling = s;\r\n        } else if (_mirror) {\r\n          sibling = _currentSibling;\r\n        } else {\r\n          sibling = nextEl(_copy || _item);\r\n        }\r\n        return target === _source && sibling === _initialSibling;\r\n      }\r\n\r\n      function findDropTarget (elementBehindCursor, clientX, clientY) {\r\n        var target = elementBehindCursor;\r\n        while (target && !accepted()) {\r\n          target = getParent(target);\r\n        }\r\n        return target;\r\n\r\n        function accepted () {\r\n          var droppable = isContainer(target);\r\n          if (droppable === false) {\r\n            return false;\r\n          }\r\n\r\n          var immediate = getImmediateChild(target, elementBehindCursor);\r\n          var reference = getReference(target, immediate, clientX, clientY);\r\n          var initial = isInitialPlacement(target, reference);\r\n          if (initial) {\r\n            return true; // should always be able to drop it right back where it was\r\n          }\r\n          return o.accepts(_item, target, _source, reference);\r\n        }\r\n      }\r\n\r\n      function drag (e) {\r\n        if (!_mirror) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n\r\n        var clientX = getCoord('clientX', e);\r\n        var clientY = getCoord('clientY', e);\r\n        var x = clientX - _offsetX;\r\n        var y = clientY - _offsetY;\r\n\r\n        _mirror.style.left = x + 'px';\r\n        _mirror.style.top = y + 'px';\r\n\r\n        var item = _copy || _item;\r\n        var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\r\n        var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n        var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\r\n        if (changed || dropTarget === null) {\r\n          out();\r\n          _lastDropTarget = dropTarget;\r\n          over();\r\n        }\r\n        var parent = getParent(item);\r\n        if (dropTarget === _source && _copy && !o.copySortSource) {\r\n          if (parent) {\r\n            parent.removeChild(item);\r\n          }\r\n          return;\r\n        }\r\n        var reference;\r\n        var immediate = getImmediateChild(dropTarget, elementBehindCursor);\r\n        if (immediate !== null) {\r\n          reference = getReference(dropTarget, immediate, clientX, clientY);\r\n        } else if (o.revertOnSpill === true && !_copy) {\r\n          reference = _initialSibling;\r\n          dropTarget = _source;\r\n        } else {\r\n          if (_copy && parent) {\r\n            parent.removeChild(item);\r\n          }\r\n          return;\r\n        }\r\n        if (\r\n          (reference === null && changed) ||\r\n          reference !== item &&\r\n          reference !== nextEl(item)\r\n        ) {\r\n          _currentSibling = reference;\r\n          dropTarget.insertBefore(item, reference);\r\n          drake.emit('shadow', item, dropTarget, _source);\r\n        }\r\n        function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\r\n        function over () { if (changed) { moved('over'); } }\r\n        function out () { if (_lastDropTarget) { moved('out'); } }\r\n      }\r\n\r\n      function spillOver (el) {\r\n        styler.removeClass(el, 'gu-hide');\r\n      }\r\n\r\n      function spillOut (el) {\r\n        if (drake.dragging) { styler.addClass(el, 'gu-hide'); }\r\n      }\r\n\r\n      function renderMirrorImage () {\r\n        if (_mirror) {\r\n          return;\r\n        }\r\n        var rect = _item.getBoundingClientRect();\r\n        _mirror = _item.cloneNode(true);\r\n        _mirror.style.width = getRectWidth(rect) + 'px';\r\n        _mirror.style.height = getRectHeight(rect) + 'px';\r\n        styler.removeClass(_mirror, 'gu-transit');\r\n        styler.addClass(_mirror, 'gu-mirror');\r\n        o.mirrorContainer.appendChild(_mirror);\r\n        touchy(documentElement, 'add', 'mousemove', drag);\r\n        styler.addClass(o.mirrorContainer, 'gu-unselectable');\r\n        drake.emit('cloned', _mirror, _item, 'mirror');\r\n      }\r\n\r\n      function removeMirrorImage () {\r\n        if (_mirror) {\r\n          styler.removeClass(o.mirrorContainer, 'gu-unselectable');\r\n          touchy(documentElement, 'remove', 'mousemove', drag);\r\n          getParent(_mirror).removeChild(_mirror);\r\n          _mirror = null;\r\n        }\r\n      }\r\n\r\n      function getImmediateChild (dropTarget, target) {\r\n        var immediate = target;\r\n        while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\r\n          immediate = getParent(immediate);\r\n        }\r\n        if (immediate === documentElement) {\r\n          return null;\r\n        }\r\n        return immediate;\r\n      }\r\n\r\n      function getReference (dropTarget, target, x, y) {\r\n        var horizontal = o.direction === 'horizontal';\r\n        var reference = target !== dropTarget ? inside() : outside();\r\n        return reference;\r\n\r\n        function outside () { // slower, but able to figure out any position\r\n          var len = dropTarget.children.length;\r\n          var i;\r\n          var el;\r\n          var rect;\r\n          for (i = 0; i < len; i++) {\r\n            el = dropTarget.children[i];\r\n            //rect = el.getBoundingClientRect();\r\n            rect = geom.boundingRect(el);\r\n            if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\r\n            if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\r\n          }\r\n          return null;\r\n        }\r\n\r\n        function inside () { // faster, but only available if dropped inside a child element\r\n          \r\n          //var rect = target.getBoundingClientRect();\r\n          var  rect = geom.boundingRect(target);\r\n          if (horizontal) {\r\n            return resolve(x > rect.left + getRectWidth(rect) / 2);\r\n          }\r\n          return resolve(y > rect.top + getRectHeight(rect) / 2);\r\n          \r\n        }\r\n\r\n        function resolve (after) {\r\n          return after ? nextEl(target) : target;\r\n        }\r\n      }\r\n\r\n      function isCopy (item, container) {\r\n        return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\r\n      }\r\n    }\r\n\r\n\r\n    \r\n    function touchy (el, op, type, fn) {\r\n      if (op == \"add\") {\r\n        eventer.on(el,type,fn);\r\n      } else {\r\n        eventer.off(el,type,fn);\r\n      }\r\n\r\n      if (!el.touchInited) {\r\n        el.touchInited = true;   \r\n        touch.mousy(el);     \r\n      }\r\n\r\n\r\n    }\r\n\r\n    function whichMouseButton (e) {\r\n    \r\n      if (e.touches !== void 0) { return e.touches.length; }\r\n      if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\r\n      if (e.buttons !== void 0) { return e.buttons; }\r\n      var button = e.button;\r\n      if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\r\n        return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\r\n      }\r\n\r\n    }\r\n\r\n    function getOffset (el) {\r\n\r\n      return geom.pagePosition(el);\r\n    }\r\n\r\n    function getElementBehindPoint (point, x, y) {\r\n      //var p = point || {}; /\r\n      //var state = p.className;\r\n      var el;\r\n      //p.className += ' gu-hide'; // use point-events css property\r\n      el = doc.elementFromPoint(x, y);\r\n      //p.className = state;\r\n      return el;\r\n    }\r\n\r\n    function never () { \r\n      return false; \r\n    }\r\n    function always () { \r\n      return true; \r\n    }\r\n    function getRectWidth (rect) { \r\n      return rect.width || (rect.right - rect.left); \r\n    }\r\n    function getRectHeight (rect) { \r\n      return rect.height || (rect.bottom - rect.top); \r\n    }\r\n    function getParent (el) { \r\n      //return el.parentNode === doc ? null : el.parentNode; \r\n      return finder.parent(el);\r\n    }\r\n    function isInput (el) {\r\n      // return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); \r\n      return noder.isInput(el);\r\n   }\r\n    \r\n    \r\n    function isEditable (el) {\r\n      /*\r\n      if (!el) { return false; } // no parents were editable\r\n      if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n      if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n      return isEditable(getParent(el)); // contentEditable is set to 'inherit'\r\n      */\r\n      return noder.isEditable(el);\r\n    }\r\n    \r\n\r\n    function nextEl (el) {\r\n      return finder.nextSibling(el);\r\n    }\r\n\r\n    function getEventHost (e) {\r\n      // on touchend event, we have to use `e.changedTouches`\r\n      // see http://stackoverflow.com/questions/7192563/touchend-event-properties\r\n      // see https://github.com/bevacqua/dragula/issues/34\r\n      if (e.targetTouches && e.targetTouches.length) {\r\n        return e.targetTouches[0];\r\n      }\r\n      if (e.changedTouches && e.changedTouches.length) {\r\n        return e.changedTouches[0];\r\n      }\r\n      return e;\r\n    }\r\n\r\n    function getCoord (coord, e) {\r\n      var host = getEventHost(e);\r\n      var missMap = {\r\n        pageX: 'clientX', // IE8\r\n        pageY: 'clientY' // IE8\r\n      };\r\n      if (coord in missMap && !(coord in host) && missMap[coord] in host) {\r\n        coord = missMap[coord];\r\n      }\r\n      return host[coord];\r\n    }\r\n\r\n    return skylark.attach(\"intg.dragula\",dragula);\r\n\r\n});\r\n\ndefine('skylark-dragula/main',[\r\n\t\"./dragula\"\r\n],function(dragula){\r\n\treturn dragula;\r\n});\ndefine('skylark-dragula', ['skylark-dragula/main'], function (main) { return main; });\n\n"]}