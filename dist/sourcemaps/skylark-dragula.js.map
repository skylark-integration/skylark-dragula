{"version":3,"sources":["skylark-dragula.js"],"names":["define","Emitter","Emitter2","inherit","_prepareArgs","e","args","init","thing","options","undefined","Object","assign","this","eventer","add","on","remove","off","styler","addClass","rm","removeClass","skylark","mouse","touch","noder","finder","geom","emitter","crossvent","classes","global","window","doc","document","documentElement","touchy","el","op","type","fn","touchInited","mousy","whichMouseButton","touches","length","which","buttons","button","getElementBehindPoint","point","x","y","elementFromPoint","never","always","getRectWidth","rect","width","right","left","getRectHeight","height","bottom","top","getParent","parent","isInput","nextEl","nextSibling","getCoord","coord","host","targetTouches","changedTouches","getEventHost","missMap","pageX","pageY","attach","initialContainers","_mirror","_source","_item","_offsetX","_offsetY","_moveX","_moveY","_initialSibling","_currentSibling","_copy","_renderTimer","arguments","Array","isArray","_grabbed","_lastDropTarget","o","moves","accepts","invalid","containers","isContainer","copy","copySortSource","revertOnSpill","removeOnSpill","direction","ignoreInputTextSelection","mirrorContainer","body","drake","start","item","context","canStart","end","cancel","destroy","events","release","canMove","dragging","indexOf","grab","eventualMovements","startBecauseMouseMoved","movements","preventGrabbed","preventDefault","clientX","clientY","ignore","metaKey","ctrlKey","target","focus","elementBehindCursor","fromPoint","grabbed","offset","pagePosition","getBoundingClientRect","cloneNode","style","appendChild","drag","emit","renderMirrorImage","handle","source","movable","container","drop","ungrab","dropTarget","findDropTarget","removeChild","isInitialPlacement","cleanup","revert","reverts","initial","insertBefore","clearTimeout","s","sibling","accepted","droppable","immediate","getImmediateChild","reference","getReference","changed","moved","horizontal","boundingRect","resolve","inside","i","len","children","outside","after","dragula","main"],"mappings":"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","file":"../skylark-dragula.js","sourcesContent":["define('skylark-dragula/emitter',[\r\n    \"skylark-langx-emitter/Emitter\"\r\n],function(Emitter){\r\n\r\n    var Emitter2 = Emitter.inherit({\r\n        _prepareArgs : function(e,args) {\r\n            return args;\r\n        },\r\n        init : function(thing, options) {\r\n            var opts = options || {};\r\n            if (thing === undefined) {\r\n                thing = {};\r\n            }\r\n\r\n            Object.assign(this,thing);\r\n        }\r\n    });\r\n\r\n    return Emitter2;\r\n});\r\n\r\n/*\r\ndefine([\r\n\t\"./atoa\",\r\n\t\"./debounce\"\r\n],function(atoa,debounce){\r\n    'use strict';\r\n\r\n\tfunction emitter(thing, options) {\r\n        var opts = options || {};\r\n        var evt = {};\r\n        if (thing === undefined) {\r\n            thing = {};\r\n        }\r\n        thing.on = function(type, fn) {\r\n            if (!evt[type]) {\r\n                evt[type] = [fn];\r\n            } else {\r\n                evt[type].push(fn);\r\n            }\r\n            return thing;\r\n        };\r\n        thing.once = function(type, fn) {\r\n            fn._once = true; // thing.off(fn) still works!\r\n            thing.on(type, fn);\r\n            return thing;\r\n        };\r\n        thing.off = function(type, fn) {\r\n            var c = arguments.length;\r\n            if (c === 1) {\r\n                delete evt[type];\r\n            } else if (c === 0) {\r\n                evt = {};\r\n            } else {\r\n                var et = evt[type];\r\n                if (!et) {\r\n                    return thing;\r\n                }\r\n                et.splice(et.indexOf(fn), 1);\r\n            }\r\n            return thing;\r\n        };\r\n        thing.emit = function() {\r\n            var args = atoa(arguments);\r\n            return thing.emitterSnapshot(args.shift()).apply(this, args);\r\n        };\r\n        thing.emitterSnapshot = function(type) {\r\n            var et = (evt[type] || []).slice(0);\r\n            return function() {\r\n                var args = atoa(arguments);\r\n                var ctx = this || thing;\r\n                if (type === 'error' && opts.throws !== false && !et.length) {\r\n                    throw args.length === 1 ? args[0] : args;\r\n                }\r\n                et.forEach(function emitter(listen) {\r\n                    if (opts.async) {\r\n                        debounce(listen, args, ctx);\r\n                    } else {\r\n                        listen.apply(ctx, args);\r\n                    }\r\n                    if (listen._once) {\r\n                        thing.off(type, listen);\r\n                    }\r\n                });\r\n                return thing;\r\n            };\r\n        };\r\n        return thing;\r\n    }\r\n\r\n    return emitter;\r\n});\r\n\r\n*/;\ndefine('skylark-dragula/crossvent',[\r\n    \"skylark-domx-eventer\"\r\n],function(eventer){\r\n    return {\r\n        add : eventer.on,\r\n        remove : eventer.off\r\n    }\r\n\r\n});\r\n\r\n/*\r\ndefine([\r\n\t\"./custom-event\",\r\n\t\"./eventmap\"\r\n],function(customEvent,eventmap){\r\n    'use strict';\r\n    var global = window;\r\n    \r\n    var doc = global.document;\r\n    var addEvent = addEventEasy;\r\n    var removeEvent = removeEventEasy;\r\n    var hardCache = [];\r\n\r\n    if (!global.addEventListener) {\r\n        addEvent = addEventHard;\r\n        removeEvent = removeEventHard;\r\n    }\r\n\r\n    function addEventEasy(el, type, fn, capturing) {\r\n        return el.addEventListener(type, fn, capturing);\r\n    }\r\n\r\n    function addEventHard(el, type, fn) {\r\n        return el.attachEvent('on' + type, wrap(el, type, fn));\r\n    }\r\n\r\n    function removeEventEasy(el, type, fn, capturing) {\r\n        return el.removeEventListener(type, fn, capturing);\r\n    }\r\n\r\n    function removeEventHard(el, type, fn) {\r\n        var listener = unwrap(el, type, fn);\r\n        if (listener) {\r\n            return el.detachEvent('on' + type, listener);\r\n        }\r\n    }\r\n\r\n    function fabricateEvent(el, type, model) {\r\n        var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\r\n        if (el.dispatchEvent) {\r\n            el.dispatchEvent(e);\r\n        } else {\r\n            el.fireEvent('on' + type, e);\r\n        }\r\n\r\n        function makeClassicEvent() {\r\n            var e;\r\n            if (doc.createEvent) {\r\n                e = doc.createEvent('Event');\r\n                e.initEvent(type, true, true);\r\n            } else if (doc.createEventObject) {\r\n                e = doc.createEventObject();\r\n            }\r\n            return e;\r\n        }\r\n\r\n        function makeCustomEvent() {\r\n            return new customEvent(type, {\r\n                detail: model\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapperFactory(el, type, fn) {\r\n        return function wrapper(originalEvent) {\r\n            var e = originalEvent || global.event;\r\n            e.target = e.target || e.srcElement;\r\n            e.preventDefault = e.preventDefault || function preventDefault() {\r\n                e.returnValue = false;\r\n            };\r\n            e.stopPropagation = e.stopPropagation || function stopPropagation() {\r\n                e.cancelBubble = true;\r\n            };\r\n            e.which = e.which || e.keyCode;\r\n            fn.call(el, e);\r\n        };\r\n    }\r\n\r\n    function wrap(el, type, fn) {\r\n        var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\r\n        hardCache.push({\r\n            wrapper: wrapper,\r\n            element: el,\r\n            type: type,\r\n            fn: fn\r\n        });\r\n        return wrapper;\r\n    }\r\n\r\n    function unwrap(el, type, fn) {\r\n        var i = find(el, type, fn);\r\n        if (i) {\r\n            var wrapper = hardCache[i].wrapper;\r\n            hardCache.splice(i, 1); // free up a tad of memory\r\n            return wrapper;\r\n        }\r\n    }\r\n\r\n    function find(el, type, fn) {\r\n        var i, item;\r\n        for (i = 0; i < hardCache.length; i++) {\r\n            item = hardCache[i];\r\n            if (item.element === el && item.type === type && item.fn === fn) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    return  {\r\n        add: addEvent,\r\n        remove: removeEvent,\r\n        fabricate: fabricateEvent\r\n    };\r\n\r\n});\r\n\r\n*/;\ndefine('skylark-dragula/classes',[\r\n    \"skylark-domx-styler\"\r\n],function(styler){\r\n  /*\r\n  var cache = {};\r\n  var start = '(?:^|\\\\s)';\r\n  var end = '(?:\\\\s|$)';\r\n\r\n  function lookupClass (className) {\r\n    var cached = cache[className];\r\n    if (cached) {\r\n      cached.lastIndex = 0;\r\n    } else {\r\n      cache[className] = cached = new RegExp(start + className + end, 'g');\r\n    }\r\n    return cached;\r\n  }\r\n\r\n  function addClass (el, className) {\r\n    var current = el.className;\r\n    if (!current.length) {\r\n      el.className = className;\r\n    } else if (!lookupClass(className).test(current)) {\r\n      el.className += ' ' + className;\r\n    }\r\n  }\r\n\r\n  function rmClass (el, className) {\r\n    el.className = el.className.replace(lookupClass(className), ' ').trim();\r\n  }\r\n\r\n  return {\r\n    add: addClass,\r\n    rm: rmClass\r\n  };\r\n  */\r\n\r\n  return {\r\n    add :  styler.addClass,\r\n    rm : styler.removeClass\r\n  }\r\n\r\n});\ndefine('skylark-dragula/dragula',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-devices-points/mouse\",\r\n  \"skylark-devices-points/touch\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-eventer\",\r\n  \"./emitter\",\r\n  \"./crossvent\",\r\n  \"./classes\"\r\n],function(\r\n  skylark,\r\n  mouse,\r\n  touch,\r\n  noder,\r\n  finder,\r\n  geom,\r\n  eventer,\r\n  emitter,\r\n  crossvent,\r\n  classes\r\n){\r\n\r\n    'use strict';\r\n    var global = window;\r\n\r\n    var doc = global.document;\r\n    var documentElement = doc.documentElement;\r\n\r\n    function dragula (initialContainers, options) {\r\n      var len = arguments.length;\r\n      if (len === 1 && Array.isArray(initialContainers) === false) {\r\n        options = initialContainers;\r\n        initialContainers = [];\r\n      }\r\n      var _mirror; // mirror image\r\n      var _source; // source container\r\n      var _item; // item being dragged\r\n      var _offsetX; // reference x\r\n      var _offsetY; // reference y\r\n      var _moveX; // reference move x\r\n      var _moveY; // reference move y\r\n      var _initialSibling; // reference sibling when grabbed\r\n      var _currentSibling; // reference sibling now\r\n      var _copy; // item used for copying\r\n      var _renderTimer; // timer for setTimeout renderMirrorImage\r\n      var _lastDropTarget = null; // last container item was over\r\n      var _grabbed; // holds mousedown context until first mousemove\r\n\r\n      var o = options || {};\r\n      if (o.moves === void 0) { o.moves = always; }\r\n      if (o.accepts === void 0) { o.accepts = always; }\r\n      if (o.invalid === void 0) { o.invalid = invalidTarget; }\r\n      if (o.containers === void 0) { o.containers = initialContainers || []; }\r\n      if (o.isContainer === void 0) { o.isContainer = never; }\r\n      if (o.copy === void 0) { o.copy = false; }\r\n      if (o.copySortSource === void 0) { o.copySortSource = false; }\r\n      if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\r\n      if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\r\n      if (o.direction === void 0) { o.direction = 'vertical'; }\r\n      if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\r\n      if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\r\n\r\n      var drake = emitter({\r\n        containers: o.containers,\r\n        start: manualStart,\r\n        end: end,\r\n        cancel: cancel,\r\n        remove: remove,\r\n        destroy: destroy,\r\n        canMove: canMove,\r\n        dragging: false\r\n      });\r\n\r\n      if (o.removeOnSpill === true) {\r\n        drake.on('over', spillOver).on('out', spillOut);\r\n      }\r\n\r\n      events();\r\n\r\n      return drake;\r\n\r\n      function isContainer (el) {\r\n        return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\r\n      }\r\n\r\n      function events (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        touchy(documentElement, op, 'mousedown', grab);\r\n        touchy(documentElement, op, 'mouseup', release);\r\n      }\r\n\r\n      function eventualMovements (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\r\n      }\r\n\r\n      function movements (remove) {\r\n        var op = remove ? 'remove' : 'add';\r\n        crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\r\n        crossvent[op](documentElement, 'click', preventGrabbed);\r\n      }\r\n\r\n      function destroy () {\r\n        events(true);\r\n        release({});\r\n      }\r\n\r\n      function preventGrabbed (e) {\r\n        if (_grabbed) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n\r\n      function grab (e) {\r\n        _moveX = e.clientX;\r\n        _moveY = e.clientY;\r\n\r\n        var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\r\n        if (ignore) {\r\n          return; // we only care about honest-to-god left clicks and touch events\r\n        }\r\n        var item = e.target;\r\n        var context = canStart(item);\r\n        if (!context) {\r\n          return;\r\n        }\r\n        _grabbed = context;\r\n        eventualMovements();\r\n        if (e.type === 'mousedown') {\r\n          if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\r\n            item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\r\n          } else {\r\n            e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\r\n          }\r\n        }\r\n      }\r\n\r\n      function startBecauseMouseMoved (e) {\r\n        if (!_grabbed) {\r\n          return;\r\n        }\r\n        if (whichMouseButton(e) === 0) {\r\n          release({});\r\n          return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\r\n        }\r\n        // truthy check fixes #239, equality fixes #207\r\n        if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\r\n          return;\r\n        }\r\n        if (o.ignoreInputTextSelection) {\r\n          var clientX = getCoord('clientX', e);\r\n          var clientY = getCoord('clientY', e);\r\n          //var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\r\n          var elementBehindCursor = noder.fromPoint(clientX,clientY);\r\n          if (isInput(elementBehindCursor)) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        var grabbed = _grabbed; // call to end() unsets _grabbed\r\n        eventualMovements(true);\r\n        movements();\r\n        end();\r\n        start(grabbed);\r\n\r\n        var offset = getOffset(_item);\r\n        _offsetX = getCoord('pageX', e) - offset.left;\r\n        _offsetY = getCoord('pageY', e) - offset.top;\r\n\r\n        classes.add(_copy || _item, 'gu-transit');\r\n        renderMirrorImage();\r\n        drag(e);\r\n      }\r\n\r\n      function canStart (item) {\r\n        if (drake.dragging && _mirror) {\r\n          return;\r\n        }\r\n        if (isContainer(item)) {\r\n          return; // don't drag container itself\r\n        }\r\n        var handle = item;\r\n        while (getParent(item) && isContainer(getParent(item)) === false) {\r\n          if (o.invalid(item, handle)) {\r\n            return;\r\n          }\r\n          item = getParent(item); // drag target should be a top element\r\n          if (!item) {\r\n            return;\r\n          }\r\n        }\r\n        var source = getParent(item);\r\n        if (!source) {\r\n          return;\r\n        }\r\n        if (o.invalid(item, handle)) {\r\n          return;\r\n        }\r\n\r\n        var movable = o.moves(item, source, handle, nextEl(item));\r\n        if (!movable) {\r\n          return;\r\n        }\r\n\r\n        return {\r\n          item: item,\r\n          source: source\r\n        };\r\n      }\r\n\r\n      function canMove (item) {\r\n        return !!canStart(item);\r\n      }\r\n\r\n      function manualStart (item) {\r\n        var context = canStart(item);\r\n        if (context) {\r\n          start(context);\r\n        }\r\n      }\r\n\r\n      function start (context) {\r\n        if (isCopy(context.item, context.source)) {\r\n          _copy = context.item.cloneNode(true);\r\n          drake.emit('cloned', _copy, context.item, 'copy');\r\n        }\r\n\r\n        _source = context.source;\r\n        _item = context.item;\r\n        _initialSibling = _currentSibling = nextEl(context.item);\r\n\r\n        drake.dragging = true;\r\n        drake.emit('drag', _item, _source);\r\n      }\r\n\r\n      function invalidTarget () {\r\n        return false;\r\n      }\r\n\r\n      function end () {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        drop(item, getParent(item));\r\n      }\r\n\r\n      function ungrab () {\r\n        _grabbed = false;\r\n        eventualMovements(true);\r\n        movements(true);\r\n      }\r\n\r\n      function release (e) {\r\n        ungrab();\r\n\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        var clientX = getCoord('clientX', e);\r\n        var clientY = getCoord('clientY', e);\r\n        var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\r\n        var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n        if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\r\n          drop(item, dropTarget);\r\n        } else if (o.removeOnSpill) {\r\n          remove();\r\n        } else {\r\n          cancel();\r\n        }\r\n      }\r\n\r\n      function drop (item, target) {\r\n        var parent = getParent(item);\r\n        if (_copy && o.copySortSource && target === _source) {\r\n          parent.removeChild(_item);\r\n        }\r\n        if (isInitialPlacement(target)) {\r\n          drake.emit('cancel', item, _source, _source);\r\n        } else {\r\n          drake.emit('drop', item, target, _source, _currentSibling);\r\n        }\r\n        cleanup();\r\n      }\r\n\r\n      function remove () {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var item = _copy || _item;\r\n        var parent = getParent(item);\r\n        if (parent) {\r\n          parent.removeChild(item);\r\n        }\r\n        drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\r\n        cleanup();\r\n      }\r\n\r\n      function cancel (revert) {\r\n        if (!drake.dragging) {\r\n          return;\r\n        }\r\n        var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\r\n        var item = _copy || _item;\r\n        var parent = getParent(item);\r\n        var initial = isInitialPlacement(parent);\r\n        if (initial === false && reverts) {\r\n          if (_copy) {\r\n            if (parent) {\r\n              parent.removeChild(_copy);\r\n            }\r\n          } else {\r\n            _source.insertBefore(item, _initialSibling);\r\n          }\r\n        }\r\n        if (initial || reverts) {\r\n          drake.emit('cancel', item, _source, _source);\r\n        } else {\r\n          drake.emit('drop', item, parent, _source, _currentSibling);\r\n        }\r\n        cleanup();\r\n      }\r\n\r\n      function cleanup () {\r\n        var item = _copy || _item;\r\n        ungrab();\r\n        removeMirrorImage();\r\n        if (item) {\r\n          classes.rm(item, 'gu-transit');\r\n        }\r\n        if (_renderTimer) {\r\n          clearTimeout(_renderTimer);\r\n        }\r\n        drake.dragging = false;\r\n        if (_lastDropTarget) {\r\n          drake.emit('out', item, _lastDropTarget, _source);\r\n        }\r\n        drake.emit('dragend', item);\r\n        _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\r\n      }\r\n\r\n      function isInitialPlacement (target, s) {\r\n        var sibling;\r\n        if (s !== void 0) {\r\n          sibling = s;\r\n        } else if (_mirror) {\r\n          sibling = _currentSibling;\r\n        } else {\r\n          sibling = nextEl(_copy || _item);\r\n        }\r\n        return target === _source && sibling === _initialSibling;\r\n      }\r\n\r\n      function findDropTarget (elementBehindCursor, clientX, clientY) {\r\n        var target = elementBehindCursor;\r\n        while (target && !accepted()) {\r\n          target = getParent(target);\r\n        }\r\n        return target;\r\n\r\n        function accepted () {\r\n          var droppable = isContainer(target);\r\n          if (droppable === false) {\r\n            return false;\r\n          }\r\n\r\n          var immediate = getImmediateChild(target, elementBehindCursor);\r\n          var reference = getReference(target, immediate, clientX, clientY);\r\n          var initial = isInitialPlacement(target, reference);\r\n          if (initial) {\r\n            return true; // should always be able to drop it right back where it was\r\n          }\r\n          return o.accepts(_item, target, _source, reference);\r\n        }\r\n      }\r\n\r\n      function drag (e) {\r\n        if (!_mirror) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n\r\n        var clientX = getCoord('clientX', e);\r\n        var clientY = getCoord('clientY', e);\r\n        var x = clientX - _offsetX;\r\n        var y = clientY - _offsetY;\r\n\r\n        _mirror.style.left = x + 'px';\r\n        _mirror.style.top = y + 'px';\r\n\r\n        var item = _copy || _item;\r\n        var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\r\n        var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\r\n        var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\r\n        if (changed || dropTarget === null) {\r\n          out();\r\n          _lastDropTarget = dropTarget;\r\n          over();\r\n        }\r\n        var parent = getParent(item);\r\n        if (dropTarget === _source && _copy && !o.copySortSource) {\r\n          if (parent) {\r\n            parent.removeChild(item);\r\n          }\r\n          return;\r\n        }\r\n        var reference;\r\n        var immediate = getImmediateChild(dropTarget, elementBehindCursor);\r\n        if (immediate !== null) {\r\n          reference = getReference(dropTarget, immediate, clientX, clientY);\r\n        } else if (o.revertOnSpill === true && !_copy) {\r\n          reference = _initialSibling;\r\n          dropTarget = _source;\r\n        } else {\r\n          if (_copy && parent) {\r\n            parent.removeChild(item);\r\n          }\r\n          return;\r\n        }\r\n        if (\r\n          (reference === null && changed) ||\r\n          reference !== item &&\r\n          reference !== nextEl(item)\r\n        ) {\r\n          _currentSibling = reference;\r\n          dropTarget.insertBefore(item, reference);\r\n          drake.emit('shadow', item, dropTarget, _source);\r\n        }\r\n        function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\r\n        function over () { if (changed) { moved('over'); } }\r\n        function out () { if (_lastDropTarget) { moved('out'); } }\r\n      }\r\n\r\n      function spillOver (el) {\r\n        classes.rm(el, 'gu-hide');\r\n      }\r\n\r\n      function spillOut (el) {\r\n        if (drake.dragging) { classes.add(el, 'gu-hide'); }\r\n      }\r\n\r\n      function renderMirrorImage () {\r\n        if (_mirror) {\r\n          return;\r\n        }\r\n        var rect = _item.getBoundingClientRect();\r\n        _mirror = _item.cloneNode(true);\r\n        _mirror.style.width = getRectWidth(rect) + 'px';\r\n        _mirror.style.height = getRectHeight(rect) + 'px';\r\n        classes.rm(_mirror, 'gu-transit');\r\n        classes.add(_mirror, 'gu-mirror');\r\n        o.mirrorContainer.appendChild(_mirror);\r\n        touchy(documentElement, 'add', 'mousemove', drag);\r\n        classes.add(o.mirrorContainer, 'gu-unselectable');\r\n        drake.emit('cloned', _mirror, _item, 'mirror');\r\n      }\r\n\r\n      function removeMirrorImage () {\r\n        if (_mirror) {\r\n          classes.rm(o.mirrorContainer, 'gu-unselectable');\r\n          touchy(documentElement, 'remove', 'mousemove', drag);\r\n          getParent(_mirror).removeChild(_mirror);\r\n          _mirror = null;\r\n        }\r\n      }\r\n\r\n      function getImmediateChild (dropTarget, target) {\r\n        var immediate = target;\r\n        while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\r\n          immediate = getParent(immediate);\r\n        }\r\n        if (immediate === documentElement) {\r\n          return null;\r\n        }\r\n        return immediate;\r\n      }\r\n\r\n      function getReference (dropTarget, target, x, y) {\r\n        var horizontal = o.direction === 'horizontal';\r\n        var reference = target !== dropTarget ? inside() : outside();\r\n        return reference;\r\n\r\n        function outside () { // slower, but able to figure out any position\r\n          var len = dropTarget.children.length;\r\n          var i;\r\n          var el;\r\n          var rect;\r\n          for (i = 0; i < len; i++) {\r\n            el = dropTarget.children[i];\r\n            //rect = el.getBoundingClientRect();\r\n            rect = geom.boundingRect(el);\r\n            if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\r\n            if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\r\n          }\r\n          return null;\r\n        }\r\n\r\n        function inside () { // faster, but only available if dropped inside a child element\r\n          \r\n          //var rect = target.getBoundingClientRect();\r\n          var  rect = geom.boundingRect(target);\r\n          if (horizontal) {\r\n            return resolve(x > rect.left + getRectWidth(rect) / 2);\r\n          }\r\n          return resolve(y > rect.top + getRectHeight(rect) / 2);\r\n          \r\n        }\r\n\r\n        function resolve (after) {\r\n          return after ? nextEl(target) : target;\r\n        }\r\n      }\r\n\r\n      function isCopy (item, container) {\r\n        return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\r\n      }\r\n    }\r\n\r\n\r\n    \r\n    function touchy (el, op, type, fn) {\r\n      /*\r\n      var touch = {\r\n        mouseup: 'touchend',\r\n        mousedown: 'touchstart',\r\n        mousemove: 'touchmove'\r\n      };\r\n      var pointers = {\r\n        mouseup: 'pointerup',\r\n        mousedown: 'pointerdown',\r\n        mousemove: 'pointermove'\r\n      };\r\n      var microsoft = {\r\n        mouseup: 'MSPointerUp',\r\n        mousedown: 'MSPointerDown',\r\n        mousemove: 'MSPointerMove'\r\n      };\r\n      if (global.navigator.pointerEnabled) {\r\n        crossvent[op](el, pointers[type], fn);\r\n      } else if (global.navigator.msPointerEnabled) {\r\n        crossvent[op](el, microsoft[type], fn);\r\n      } else {\r\n        crossvent[op](el, touch[type], fn);\r\n        crossvent[op](el, type, fn);\r\n      }\r\n      */\r\n      if (op == \"add\") {\r\n        eventer.on(el,type,fn);\r\n      } else {\r\n        eventer.off(el,type,fn);\r\n      }\r\n\r\n      if (!el.touchInited) {\r\n        el.touchInited = true;   \r\n        touch.mousy(el);     \r\n      }\r\n\r\n\r\n    }\r\n\r\n    function whichMouseButton (e) {\r\n    \r\n      if (e.touches !== void 0) { return e.touches.length; }\r\n      if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\r\n      if (e.buttons !== void 0) { return e.buttons; }\r\n      var button = e.button;\r\n      if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\r\n        return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\r\n      }\r\n\r\n    }\r\n\r\n    function getOffset (el) {\r\n      /*\r\n      var rect = el.getBoundingClientRect();\r\n      return {\r\n        left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\r\n        top: rect.top + getScroll('scrollTop', 'pageYOffset')\r\n      };\r\n      */\r\n      return geom.pagePosition(el);\r\n    }\r\n\r\n    /*\r\n    function getScroll (scrollProp, offsetProp) {\r\n      if (typeof global[offsetProp] !== 'undefined') {\r\n        return global[offsetProp];\r\n      }\r\n      if (documentElement.clientHeight) {\r\n        return documentElement[scrollProp];\r\n      }\r\n      return doc.body[scrollProp];\r\n    }\r\n    */\r\n\r\n    function getElementBehindPoint (point, x, y) {\r\n      //var p = point || {}; /\r\n      //var state = p.className;\r\n      var el;\r\n      //p.className += ' gu-hide'; // use point-events css property\r\n      el = doc.elementFromPoint(x, y);\r\n      //p.className = state;\r\n      return el;\r\n    }\r\n\r\n    function never () { \r\n      return false; \r\n    }\r\n    function always () { \r\n      return true; \r\n    }\r\n    function getRectWidth (rect) { \r\n      return rect.width || (rect.right - rect.left); \r\n    }\r\n    function getRectHeight (rect) { \r\n      return rect.height || (rect.bottom - rect.top); \r\n    }\r\n    function getParent (el) { \r\n      //return el.parentNode === doc ? null : el.parentNode; \r\n      return finder.parent(el);\r\n    }\r\n    function isInput (el) {\r\n      // return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); \r\n      return noder.isInput(el);\r\n   }\r\n    \r\n    \r\n    function isEditable (el) {\r\n      /*\r\n      if (!el) { return false; } // no parents were editable\r\n      if (el.contentEditable === 'false') { return false; } // stop the lookup\r\n      if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\r\n      return isEditable(getParent(el)); // contentEditable is set to 'inherit'\r\n      */\r\n      return noder.isEditable(el);\r\n    }\r\n    \r\n\r\n    function nextEl (el) {\r\n      /*\r\n      return el.nextElementSibling || manually();\r\n      function manually () {\r\n        var sibling = el;\r\n        do {\r\n          sibling = sibling.nextSibling;\r\n        } while (sibling && sibling.nodeType !== 1);\r\n        return sibling;\r\n      }\r\n      */\r\n      return finder.nextSibling(el);\r\n    }\r\n\r\n    function getEventHost (e) {\r\n      // on touchend event, we have to use `e.changedTouches`\r\n      // see http://stackoverflow.com/questions/7192563/touchend-event-properties\r\n      // see https://github.com/bevacqua/dragula/issues/34\r\n      if (e.targetTouches && e.targetTouches.length) {\r\n        return e.targetTouches[0];\r\n      }\r\n      if (e.changedTouches && e.changedTouches.length) {\r\n        return e.changedTouches[0];\r\n      }\r\n      return e;\r\n    }\r\n\r\n    function getCoord (coord, e) {\r\n      var host = getEventHost(e);\r\n      var missMap = {\r\n        pageX: 'clientX', // IE8\r\n        pageY: 'clientY' // IE8\r\n      };\r\n      if (coord in missMap && !(coord in host) && missMap[coord] in host) {\r\n        coord = missMap[coord];\r\n      }\r\n      return host[coord];\r\n    }\r\n\r\n    return skylark.attach(\"intg.dragula\",dragula);\r\n\r\n});\r\n\ndefine('skylark-dragula/main',[\r\n\t\"./dragula\"\r\n],function(dragula){\r\n\treturn dragula;\r\n});\ndefine('skylark-dragula', ['skylark-dragula/main'], function (main) { return main; });\n\n"]}